version: "3.4"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5673:5672"
      - "15672:15672"

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "8040:8000"
      - "9040:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  neptunedb_sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: neptunedb_sqlserver
    environment:
      - CHECK_POLICY=OFF
      - MSSQL_SA_PASSWORD=admin1234
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/lib/sqlserver

  neptuneserver:
    image: ${DOCKER_REGISTRY-}neptuneserver
    build:
      context: .
      dockerfile: ShareFiles/neptuneserver/Dockerfile
    container_name: neptuneserver
    environment:
      - NEPTUNE_DB_ONLINE_SERVER_NAME=neptunedb_sqlserver
      - NEPTUNE_DB_ONLINE_SERVER_PORT=1433
      - NEPTUNE_DB_ONLINE_NAME=neptune
      - NEPTUNE_DB_ONLINE_SCHEMA=dbo
      - NEPTUNE_DB_ONLINE_RDBMS_TYPE=sqlserver
      - NEPTUNE_DB_ONLINE_USERNAME=neptune
      - NEPTUNE_DB_ONLINE_PASSWORD=bmVwdHVuZQ==
      - NEPTUNE_DB_ONLINE_PASSWORD_ENCRYPTION_METHOD=BASE64
    depends_on:
      - rabbitmq
    restart: always
    ports:
      - "105:105"
      - "109:109"

  accounting.api:
    image: ${DOCKER_REGISTRY-}accountingapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Accounting/Dockerfile
    container_name: accounting.api
    depends_on:
      - neptuneserver
    ports:
      - "8050:80"
      - "5050:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9accounting;user id=o9accounting;password=h12RH0DQ4Kpt7LQEdsTZMHW5sALaZDtx8JzZRk0qFnU=;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  admin.api:
    image: ${DOCKER_REGISTRY-}adminapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Admin/Dockerfile
    container_name: admin.api
    depends_on:
      - neptuneserver
    ports:
      - "8051:80"
      - "5051:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9admin;user id=o9admin;password=eiliZ3ioLXuTmqydaFHG+w==;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  cash.api:
    image: ${DOCKER_REGISTRY-}cashapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Cash/Dockerfile
    container_name: cash.api
    depends_on:
      - neptuneserver
    ports:
      - "8052:80"
      - "5052:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9cash;user id=o9cash;password=LPNLuOZeQu3vgjZhbsFPlQ==;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  credit.api:
    image: ${DOCKER_REGISTRY-}creditapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Credit/Dockerfile
    container_name: credit.api
    depends_on:
      - neptuneserver
    ports:
      - "8053:80"
      - "5053:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9credit;user id=o9credit;password=OZ1YRqGVA9KvH1YfJsMBVauvYMdegWDb;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  customer.api:
    image: ${DOCKER_REGISTRY-}customerapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Customer/Dockerfile
    container_name: customer.api
    depends_on:
      - neptuneserver
    ports:
      - "8054:80"
      - "5054:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9customer;user id=o9customer;password=gEjwPeX6E487RiwrTgQnm2s/ASdqmWJA;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  deposit.api:
    image: ${DOCKER_REGISTRY-}depositgapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Deposit/Dockerfile
    container_name: deposit.api
    depends_on:
      - neptuneserver
    ports:
      - "8055:80"
      - "5055:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9deposit;user id=o9deposit;password=k95NRG29gGwp/uu7h02EJiYAvIdj3DAx;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  fixedasset.api:
    image: ${DOCKER_REGISTRY-}fixedassetapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.FixedAsset/Dockerfile
    container_name: fixedasset.api
    depends_on:
      - neptuneserver
    ports:
      - "8056:80"
      - "5056:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9fixedasset;user id=o9fixedasset;password=bUrpvmHfRTEt0mYqKhVBl9IpnOVnNHflklMpgXyyRfk=;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  fx.api:
    image: ${DOCKER_REGISTRY-}fxapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.FX/Dockerfile
    container_name: fx.api
    depends_on:
      - neptuneserver
    ports:
      - "8057:80"
      - "5057:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9fx;user id=o9fx;password=ovLOaTMCreIIxRmd9kQ0ow==;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  mortgage.api:
    image: ${DOCKER_REGISTRY-}mortgageapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Mortgage/Dockerfile
    container_name: mortgage.api
    depends_on:
      - neptuneserver
    ports:
      - "8059:80"
      - "5059:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9mortgage;user id=o9mortgage;password=M3boFkrp/kud/DURyziLarIk7isBfE6X;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  payment.api:
    image: ${DOCKER_REGISTRY-}paymentapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Payment/Dockerfile
    container_name: payment.api
    depends_on:
      - neptuneserver
    ports:
      - "8060:80"
      - "5060:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9payment;user id=o9payment;password=QL4rD79dDYpUHI/Dcf069msV2WJvsz63;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  batch.api:
    image: ${DOCKER_REGISTRY-}batchapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Batch/Dockerfile
    container_name: batch.api
    depends_on:
      - neptuneserver
    ports:
      - "8061:80"
      - "5061:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9batch;user id=o9batch;password=ygN7CVSwuxqU+04Oqe5Kcw==;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  cms.api:
    image: ${DOCKER_REGISTRY-}cmsapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.CMS/Dockerfile
    container_name: cms.api
    depends_on:
      - neptuneserver
      - redis
    ports:
      - "8066:443"
      - "6066:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9cms;user id=o9cms;password=+JfoEEfVsGUfxrmBv94Xag==;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  nginx:
    image: ${DOCKER_REGISTRY-}nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 5066:443

  voucher.api:
    image: ${DOCKER_REGISTRY-}voucherapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Voucher/Dockerfile
    container_name: voucher.api
    depends_on:
      - neptuneserver
    ports:
      - "8063:80"
      - "5063:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9voucher;user id=o9voucher;password=gqdeNmFpX+OxWSN9+H1V9mWm/laYq9gt;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  report.api:
    image: ${DOCKER_REGISTRY-}reportapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Report/Dockerfile
    container_name: report.api
    depends_on:
      - neptuneserver
    ports:
      - "8067:443"
      - "5067:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9report;user id=o9report;password=1AMnPaAx90ap/0UJSbTBRDvRpWV27YcJ;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  ems.api:
    image: ${DOCKER_REGISTRY-}emsapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.EMS/Dockerfile
    container_name: ems.api
    depends_on:
      - neptuneserver
    ports:
      - "8068:80"
      - "5068:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9ems;user id=o9ems;password=o9ems;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  email.api:
    image: ${DOCKER_REGISTRY-}emailapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Email/Dockerfile
    container_name: email.api
    depends_on:
      - neptuneserver
    ports:
      - "8064:80"
      - "5064:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9email;user id=o9email;password=o9email;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  import.api:
    image: ${DOCKER_REGISTRY-}importapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Import/Dockerfile
    container_name: import.api
    depends_on:
      - neptuneserver
    ports:
      - "8069:80"
      - "5072:5000"
    environment:
      - ConnectionStrings:ConnectionString=server=neptunedb_sqlserver,1433;database=o9import;user id=o9import;password=o9import;TrustServerCertificate=true
      - ConnectionStrings:DataProvider=sqlserver

  sample.api:
    image: ${DOCKER_REGISTRY-}sampleapi
    build:
      context: .
      dockerfile: Jits.Neptune.Web.Sample/Dockerfile
    container_name: sample.api
    depends_on:
      - neptuneserver
    ports:
      - "8098:80"
      - "5098:5000"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    container_name: adminer
    environment:
      - ADMINER_DESIGN=lucas-sandery
      - ADMINER_PLUGINS=tables-filter tinymce
    restart: always
    ports:
      - "8080:8080"

volumes:
  portainer_data:
  sqlserver_data:
