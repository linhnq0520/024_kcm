<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jits.Neptune.Web.Framework</name>
    </assembly>
    <members>
        <member name="T:Jits.Neptune.Web.Framework.Clients.CallDuration">
            <summary>
            Track time spent on an API call
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.SetupDuration">
            <summary>
            Tracks amount of time spent setting up a REST API call
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.ServerDuration">
            <summary>
            Tracks amount of time the server took processing the request
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.ServiceDuration">
            <summary>
            Tracks amount of time the service engine took processing the request
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.DataDuration">
            <summary>
            Tracks amount of time the data caching engine took processing the request
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.TransitDuration">
            <summary>
            Tracks amount of time the API call was in flight
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallDuration.ParseDuration">
            <summary>
            Tracks the amount of time it took to parse results from the API call
            </summary>
            <value></value>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Clients.CallDuration.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Clients.CallDuration.FinishSetup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Clients.CallDuration.FinishReceive(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Call this when the API call has returned all its results
            </summary>
            <param name="serverDuration"></param>
            <param name="dataDuration"></param>
            <param name="serviceDuration"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Clients.CallDuration.FinishParse">
            <summary>
            Call this when the results have been fully parsed
            </summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Clients.CallDuration._timer">
            <summary>
            Keep track of time since last checkpoint
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Clients.CallDuration.Checkpoint">
            <summary>
            Determine time since last checkpoint, and advance checkpoint
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Clients.CallEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.HttpVerb">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.RequestUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.Code">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.RequestBody">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.ResponseString">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.ResponseBody">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.CallEventArgs.Duration">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.NeptuneError.statusCode">
            <summary>
            The HTTP status code
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Clients.NeptuneError.error">
            <summary>
            The raw error message from the client
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.InstallController">
            <summary>
            Install controller
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.InstallController.#ctor(Jits.Neptune.Core.Configuration.AppSettings,Jits.Neptune.Core.Infrastructure.INeptuneFileProvider,Jits.Neptune.Web.Framework.Services.Security.IEncryptionService)">
            <summary>
            Constructor
            </summary>
            <param name="appSettings"></param>
            <param name="fileProvider"></param>
            <param name="encryptService"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.InstallController.Ping">
            <summary>
            Ping api
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.InstallController.Index(Jits.Neptune.Web.Framework.Models.InstallModel)">
            <summary>
            Install database
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.#ctor(Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService,Jits.Neptune.Core.IWorkContext)">
            <summary>
            
            </summary>
            <param name="localizationService"></param>
            <param name="workContext"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.Delete(System.Int32)">
            <summary>
            Delete a locale string resource
            </summary>
            <param name="id">Locale string resource identifier</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Gets all locale string resource
            </summary>
            <param name="createdOnFrom"></param>
            <param name="createdOnTo"></param>
            <param name="page"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.GetById(System.Int32)">
            <summary>
            Gets a locale string resource by identifier
            </summary>
            <param name="id">The locale string resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.GetByName(System.String,System.String)">
            <summary>
            Gets a locale string resource by name
            </summary>
            <param name="resourceName"></param>
            <param name="language">Language</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.Create(Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel)">
            <summary>
            Create a locale string resource
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.Update(Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel)">
            <summary>
            Update the locale string resource
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.Localization.LocaleStringResourceController.GetResource(System.String,System.String,System.String)">
            <summary>
            Get a resource string based on the specified resource key
            </summary>
            <param name="resourceKey"></param>
            <param name="language"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.LogController">
            <summary>
            Log Controller 
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.LogController.#ctor(Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.LogController.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Gets logs
            </summary>
            <param name="createdOnFrom"></param>
            <param name="createdOnTo"></param>
            <param name="page"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.LogController.GetById(System.Int32)">
            <summary>
            Get Log by identifier
            </summary>
            <param name="id">Log identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.LogController.Delete(System.Int32)">
            <summary>
            Delete log by identififer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.TemplateController">
            <summary>
            Template controller
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.TemplateController.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.TemplateController.GetInfo(System.String,System.String)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Controllers.ToolController">
            <summary>
            Log Controller 
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.ToolController.#ctor(Jits.Neptune.Web.Framework.Services.Logging.ILogger,Jits.Neptune.Web.Framework.Services.Security.IEncryptionService)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="encryptionService"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.ToolController.Encrypt(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="secretKey"></param>
            <param name="encryptType"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Controllers.ToolController.Decrypt(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="secretKey"></param>
            <param name="encryptType"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Extensions.HtmlExtensions">
            <summary>
            Html extensions
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Globalization.NeptuneRequestCultureProvider">
            <summary>
            Determines the culture information for a request
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Globalization.NeptuneRequestCultureProvider.#ctor(Microsoft.AspNetCore.Builder.RequestLocalizationOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Helpers.AuthorizeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Helpers.AuthorizeAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Helpers.ModelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Helpers.ModelExtensions.ToPagedListModel``2(Jits.Neptune.Core.IPagedList{``0})">
            <summary>
            
            </summary>
            <param name="items"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.ErrorHandlerStartup">
            <summary>
            Represents object for the configuring exceptions and errors handling on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.ErrorHandlerStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.ErrorHandlerStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.ErrorHandlerStartup.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions">
            <summary>
            Represents extensions of IApplicationBuilder
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions.ConfigureRequestPipeline(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the application HTTP request pipeline
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions.UseNeptuneExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add exception handling
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions.UseNeptuneStaticFiles(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure static file serving
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions.UseNeptuneRequestLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the request localization feature
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationBuilderExtensions.UseNeptuneEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Endpoints routing
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ApplicationPartManagerExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Extensions.HttpClientBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.HttpClientBuilderExtensions.WithProxy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
            <summary>
            
            </summary>
            <param name="httpClientBuilder"></param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions">
            <summary>
            Represents extensions of IServiceCollection
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions.ConfigureApplicationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Add services to the application and configure service provider
            </summary>
            <param name="services">Collection of service descriptors</param>
            <param name="builder">A builder for web applications and services</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions.AddHttpContextAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register HttpContextAccessor
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions.AddDistributedCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add services required for distributed cache
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions.AddNeptuneMvc(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add and configure MVC for the application
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Extensions.ServiceCollectionExtensions.AddNeptuneHttpClients(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add and configure default HTTP clients
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Mapper.BaseMapperConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Mapper.BaseMapperConfiguration.CreateModelMap``2(System.Action{AutoMapper.IMappingExpression{``1,``0}})">
            <summary>
            
            </summary>
            <param name="ignoreRule"></param>
            <typeparam name="EntityType"></typeparam>
            <typeparam name="ModelType"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.Mapper.BaseMapperConfiguration.Order">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Mapper.Extensions.MappingExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Mapper.Extensions.MappingExtensions.ToModel``1(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <typeparam name="TBaseJsonModel"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Mapper.Extensions.MappingExtensions.FromModel``1(Jits.Neptune.Web.Framework.Models.BaseNeptuneModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Mapper.Extensions.MappingExtensions.ToEntity``1(Jits.Neptune.Core.BaseEntity)">
            <summary>
            Execute a mapping from the model to a new entity
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <param name="entity">Entity to map from</param>
            <returns>Mapped entity</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.Mapper.FrameworkMapperConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.Mapper.FrameworkMapperConfiguration.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneApiStartup">
            <summary>
            Represents object for the configuring routing on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneApiStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services">Collection of service descriptors</param>
            <param name="configuration">Configuration of the application</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneApiStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure using of added middleware
            </summary>
            <param name="application"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.NeptuneApiStartup.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneCommonStartup">
            <summary>
            Represents object for the configuring common features and middleware on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneCommonStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneCommonStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.NeptuneCommonStartup.Order">
            <summary>
            Gets order of this startup configuration implmentation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneMvcStartup">
            <summary>
            Represents object for the configuring MVC on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneMvcStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add anc configure any of the middleware
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneMvcStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.NeptuneMvcStartup.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneRoutingStartup">
            <summary>
            Represents object for the configuring routing on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneRoutingStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services">Collection of service descriptors</param>
            <param name="configuration">Configuration of the application</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneRoutingStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure using of added middleware
            </summary>
            <param name="application"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.NeptuneRoutingStartup.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneStartup">
            <summary>
            Represents the registering services on application startup
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.NeptuneStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.NeptuneStartup.Order">
            <summary>
            Gets order of this dependency registrar implementation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.NeptuneStaticFilesStartup">
            <summary>
            Represents class for the configuring routing on application startup
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Infrastructure.RouteProvider">
            <summary>
            Register routes
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Infrastructure.RouteProvider.RegisterRoutes(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Register routes
            </summary>
            <param name="endpointRouteBuilder"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Infrastructure.RouteProvider.Priority">
            <summary>
            Gets a priority of route provider
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Middleware.ErrorHandlerMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Middleware.ErrorHandlerMiddleware.#ctor(Jits.Neptune.Web.Framework.Services.Logging.ILogger,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="next"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Middleware.ErrorHandlerMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Middleware.JwtMiddleware">
            <summary>
            The custom JWT middleware
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Middleware.JwtMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Middleware.JwtMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Jits.Neptune.Core.IWorkContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="workContext"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Middleware.JwtMiddleware.AttachUserToContext(Microsoft.AspNetCore.Http.HttpContext,Jits.Neptune.Core.IWorkContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="workContext"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.BaseNeptuneModel">
            <summary>
            Represents base Neptune model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BasePagedListModel`1.Data">
            <summary>
            Gets or sets data records
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BasePagedListModel`1.Draw">
            <summary>
            Gets or sets draw
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BasePagedListModel`1.RecordsFiltered">
            <summary>
            Gets or sets a number of filtered data records
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BasePagedListModel`1.RecordsTotal">
            <summary>
            Gets or sets a number of total data records
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.BaseTransactionModel">
            <summary>
            Represents base Neptune Transaction Model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.TransactionCode">
            <summary>
            Transaction code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.TransactionNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.TransactionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.SubCode">
            <summary>
            Step code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.TransactionDate">
            <summary>
            Transaction date
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.ServiceSysDate">
            <summary>
            Service system date
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.ReferenceId">
            <summary>
            Reference identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.RefId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.ReferenceCode">
            <summary>
            Reference code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.BusinessCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.ValueDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.CurrentUserCode">
            <summary>
            User code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.CurrentBranchCode">
            <summary>
            Branch code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.UserApprove">
            <summary>
            User approve
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.Status">
            <summary>
            Status of transaction
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.IsReverse">
            <summary>
            Is reverse?
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.Amount1">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.ChannelId">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.TransId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionModel.RequestBody">
            <summary>
            Request body
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel">
            <summary>
            Represents base Neptune Transaction Response Model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.TransactionCode">
            <summary>
            Transaction code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.SubCode">
            <summary>
            Step code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.TransactionDate">
            <summary>
            Transaction date
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.ReferenceId">
            <summary>
            Reference identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.UserId">
            <summary>
            User identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.UserApprove">
            <summary>
            User approve
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.Status">
            <summary>
            Status of transaction
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.IsReverse">
            <summary>
            Is reverse?
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.Amount1">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.BaseTransactionResponseModel.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty">
            <summary>
            Represent DataTables column property
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="dataValue"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.data">
            <summary>
            Set the data source for the column from the rows data object / array.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Title">
            <summary>
            Set the column title
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Render">
            <summary>
            Render (process) the data for use in the table.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Width">
            <summary>
            Column width
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.AutoWidth">
            <summary>
            Column autowidth assignment.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.IsMasterCheckBox">
            <summary>
            Indicate whether the column is master check box
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.ClassName">
            <summary>
            Class to assign to each cell in the column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Visible">
            <summary>
            Enable or disable the display of this column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Searchable">
            <summary>
            Enable or disable filtering on the data in this column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Editable">
            <summary>
            Enable or disable editing on the data in this column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.EditType">
            <summary>
            Data column type
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.ColumnProperty.Encode">
            <summary>
            Enable or disable encode on the data in this column
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel">
            <summary>
            Represents base DataTables model
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Name">
            <summary>
            Gets or sets table name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.UrlRead">
            <summary>
            Gets or sets URL for data read (ajax)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.UrlDelete">
            <summary>
            Gets or sets URL for data delete 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.UrlUpdate">
            <summary>
            Gets or sets URL for update
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.SearchButtonId">
            <summary>
            Gets or sets search button id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Data">
            <summary>
            Gets or sets data for table (ajax, json, array)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Processing">
            <summary>
            Enable or disable the display of 'processing' indicator
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.ServerSide">
            <summary>
            Feature control DataTables' server-side processing mode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Paging">
            <summary>
            Enable or disable table pagination
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Info">
            <summary>
            Enable or disable table pagination
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.RowIdBasedOnField">
            <summary>
            If set, populate the row id based on the specified field
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.RefreshButton">
            <summary>
            Enable or disable refresh button
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.PagingType">
            <summary>
            Pagination button display options.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Length">
            <summary>
            Number of rows to display on a single page when using pagination
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.LengthMenu">
            <summary>
            This parameter allows you to readily specify the entries in the length drop down select list that DataTables shows when pagination is enabled.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Dom">
            <summary>
            Indicates where particular features appears in the DOM
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.Ordering">
            <summary>
            Feature control ordering 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.HeaderCallback">
            <summary>
            Gets or sets custom header function name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.FooterColumns">
            <summary>
            Gets or sets a number of columns to generate in a fotter. Set 0 to disable footer
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.FooterCallback">
            <summary>
            Gets or sets custom render footer function name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.IsChildTable">
            <summary>
            Gets or sets indicate of child table
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.ChildTable">
            <summary>
            Gets or sets child table
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.PrimaryKeyColumn">
            <summary>
            Gets or sets primary key column name for parent table
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.BindColumnNameActionDelete">
            <summary>
            Gets or sets bind column name for delete action.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataTablesModel.ColumnCollection">
            <summary>
            Gets or set column collection
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.ActionName">
            <summary>
            Gets or sets the name of the action
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.ControllerName">
            <summary>
            Gets or sets the name of the controller
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.Url">
            <summary>
            Gets or sets the URL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.RouteValues">
            <summary>
            Gets or sets the route values.
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.DataId">
            <summary>
            Gets or sets data Id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.DataUrl.TrimEnd">
            <summary>
            Gets or sets parameter indicating that you need to delete all occurrences of the characters "/" at the end of the line
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.EditType">
            <summary>
            Represents type editing of column
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter">
            <summary>
            Represent DataTables filter parameter
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.#ctor(System.String)">
            <summary>
            Initialize a new instance of the FilterParameter class by default as string type parameter
            </summary>
            <param name="name">Filter parameter name</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the FilterParameter class
            </summary>
            <param name="name">Filter parameter name</param>
            <param name="type">Filter parameter type</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the FilterParameter class
            </summary>
            <param name="name">Filter parameter name</param>
            <param name="value">Filter parameter value</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Intializes a new instance of the FilterParameter class for linking "parent-child" tables
            </summary>
            <param name="name">Filter parameter name</param>
            <param name="parentName">Filter parameter parent name</param>
            <param name="isParentChildParameter">Parameter indicator for linking "parent-child" tables</param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.Name">
            <summary>
            Filter field name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.ModelName">
            <summary>
            Filter model name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.Type">
            <summary>
            Filter field value
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.Value">
            <summary>
            Filter field value
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.FilterParameter.ParentName">
            <summary>
            Filter field parent name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonEdit.Url">
            <summary>
            Gets or sets Url to action edit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonEdit.ClassName">
            <summary>
            Gets or sets button class name
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonRemove">
            <summary>
            Represents button render for DataTables column
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonRemove.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RenderButton class
            </summary>
            <param name="title"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonRemove.Title">
            <summary>
            Gets or sets button title
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonRemove.ClassName">
            <summary>
            Gets or sets button class name
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonsInlineEdit">
            <summary>
            Represents button render for DataTables column
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonsInlineEdit.#ctor">
            <summary>
            Initializes a new instance of the RenderButton class
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonsInlineEdit.ClassName">
            <summary>
            Gets or sets button class name
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonView">
            <summary>
            Represents button view render for DataTables column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonView.Url">
            <summary>
            Gets or sets Url to action edit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderButtonView.ClassName">
            <summary>
            Gets or sets button class name
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.DataTables.RenderCheckBox.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RenderCheckBox class
            </summary>
            <param name="name">Checkbox name</param>
            <param name="propertyKeyName">Property key name ("Id" by default). This property must be defined in the row dataset</param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderCheckBox.Name">
            <summary>
            Gets or sets name checkbox
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderCheckBox.PropertyKeyName">
            <summary>
            Gets or sets identificator for row
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.DataTables.RenderLink">
            <summary>
            Represents link render for DataTables column
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderLink.Url">
            <summary>
            Gets or sets Url to action edit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.DataTables.RenderLink.Title">
            <summary>
            Gets or sets link title
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Extensions.ModelExtensions">
            <summary>
            Represents model extensions
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Extensions.ModelExtensions.ToPagedList``1(System.Collections.Generic.IList{``0},Jits.Neptune.Web.Framework.Models.IPagingRequestModel)">
            <summary>
            Convert list to paged list according to paging request
            </summary>
            <param name="list">List of objects</param>
            <param name="pagingRequestModel">Paging request model</param>
            <typeparam name="T">Paged list</typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Extensions.ModelExtensions.ToPagedListAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},Jits.Neptune.Web.Framework.Models.IPagingRequestModel)">
            <summary>
            Convert async-enumerable sequence to paged list according to paging request
            </summary>
            <param name="collection"></param>
            <param name="pagingRequestModel"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.InstallModel">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.InstallModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.Collation">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.DatabaseName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.ServerName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.IntegratedSecurity">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.Port">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.Username">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.InstallModel.DataProvider">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.IPagingRequestModel">
            <summary>
            Represents a paging request model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.IPagingRequestModel.Page">
            <summary>
            Gets a page number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.IPagingRequestModel.PageSize">
            <summary>
            Gets a page size
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel.Id">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel.Language">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel.ResourceName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Localization.LocaleStringResourceModel.ResourceValue">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Logging.LogModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Logging.LogModel.LogLevelId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Logging.LogModel.ShortMessage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Logging.LogModel.FullMessage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Logging.LogModel.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.ModelWithId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.ModelWithId.Id">
            <summary>
            Gets or sets the model object identifier
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel">
            <summary>
            Fee Model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.ShareFee">
            <summary>
            SFAPPL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.IfcCode">
            <summary>
            IFCCD
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.Payrate">
            <summary>
            Pay Rate (PAYRATE)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.IfcValue">
            <summary>
            IFCVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.IfcAmount">
            <summary>
            IFCAMT
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.CurrencyAccountCode">
            <summary>
            CCRID
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.FloorValue">
            <summary>
            FLRVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.CeilingValue">
            <summary>
            CEIVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.ShareRate">
            <summary>
            SRATE
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.ShareAmount">
            <summary>
            SAMT
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.RoundRate">
            <summary>
            RRATE
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.RoundAmount">
            <summary>
            RAMT
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.CurrencyFeeCode">
            <summary>
            CCRCD
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.PaySource">
            <summary>
            Pay Source (PAYSRC)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.ValueTypect">
            <summary>
            Value Typect
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.FeeModel.ValueType">
            <summary>
            Value Type
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneServiceModel">
            <summary>
            Represents a neptune service model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneServiceModel.StepCode">
            <summary>
            Step code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneServiceModel.FullClassName">
            <summary>
            Full class name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneServiceModel.MethodName">
            <summary>
            Method name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneServiceModel.Async">
            <summary>
            Is async method
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition">
            <summary>
            AccountChart
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.TransactionCode">
            <summary>
            txcode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.StepCode">
            <summary>
            txcode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.NodeData">
            <summary>
            txcode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountType">
            <summary>
            actype
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountName">
            <summary>
            acname
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.EntryCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.EntryParameterCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.EntryParameterValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.DebitOrCredit">
            <summary>
            dorc
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.ValueTypeOfAmount">
            <summary>
            valtype
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.TagOfField">
            <summary>
            valtag
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.DiriectValue">
            <summary>
            mval
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.ValueName">
            <summary>
            valname
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountingEntryGroup">
            <summary>
            acgrp
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountingEntryIndex">
            <summary>
            acidx
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountingEntry">
            <summary>
            acctype
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.ModuleCode">
            <summary>
            mdlcode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.AccountMasterTag">
            <summary>
            mdlkeyval
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.BaseAmount">
            <summary>
            bamt
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.WorkingBranch">
            <summary>
            brw
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.MasterBranch">
            <summary>
            brm
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.Currency">
            <summary>
            ccr
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.Voucher">
            <summary>
            prn
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.IsCompress">
            <summary>
            iscompress
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.ClearingType">
            <summary>
            clrtype
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.FXClearingType">
            <summary>
            fxclrtype
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.AccountingRuleDefinition.DefAccountNumber">
            <summary>
            defacno
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntriesSummary">
            <summary>
            Represents Gl Entries
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntriesSummary.GLAccount">
            <summary>
            GL Account number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntriesSummary.DorC">
            <summary>
            Debit or Credit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntriesSummary.Amount">
            <summary>
            Posting amount
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntriesSummary.ValueDate">
            <summary>
            Core working date
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel">
            <summary>
            Represents Gl Entries
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.TransactionNumber">
            <summary>
            Transaction number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.TransTableName">
            <summary>
            Name of Master Trans GL: CreditAccountTrans, ProvisioningTrans
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.TransId">
            <summary>
            Trans id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.SysAccountName">
            <summary>
            Sys Account name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.GLAccount">
            <summary>
            GL Account number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.DorC">
            <summary>
            Debit or Credit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.TransactionStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.Amount">
            <summary>
            Posting amount
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.BranchCode">
            <summary>
            Branch code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.CurrencyCode">
            <summary>
            Currency code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.ValueDate">
            <summary>
            Core working date
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.Posted">
            <summary>
            Moved to ACT service
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.CrossBranchCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.CrossCurrencyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.Posting.GLEntryModel.BaseCurrencyAmount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.TransactionCode">
            <summary>
            Transaction code
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.SubCode">
            <summary>
            Step code
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.TransactionDate">
            <summary>
            Transaction date
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.TransactionNumber">
            <summary>
            Transaction number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.RefId">
            <summary>
            Reference identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.UserCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.IsReverse">
            <summary>
            Is Reverse
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionAuditModel.Details">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.RefId">
            <summary>
            Transaction reference identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.Entity">
            <summary>
            Update Entity name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.EntityId">
            <summary>
            Entity identifier
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.FieldName">
            <summary>
            Update Field name
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.OldValue">
            <summary>
            Old value
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.NewValue">
            <summary>
            New value
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.Status">
            <summary>
            Is Reverse?
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.UpdateType">
            <summary>
            Type of update: adjust or debit or credit
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Neptune.TransactionDetailAuditModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneExtensions.ToDictionary(System.Collections.Generic.List{FluentValidation.Results.ValidationFailure})">
            <summary>
            
            </summary>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Neptune.NeptuneExtensions.ToDictionary(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Neptune.StringExtensions.ToModel``1(System.String)">
            <summary>
            Returns Base Neptune Model deserialize from a string
            </summary>
            <param name="value">Json string</param>
            <typeparam name="T">Neptune model type</typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Neptune.StringExtensions.ToWorkflowInput``1(System.String)">
            <summary>
            Return request 
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor">
            <summary>
            MultiValueName
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountNumber">
            <summary>
            AccountNumber : 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountType">
            <summary>
            AccountType : Deposit (DEPOSIT), Credit(CREDIT), ... // service id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountCurrencyId">
            <summary>
            CurrencyCode : Currency of Account number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.BranchCode">
            <summary>
            BranchId : Branch of Account number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.DefAccountNumber">
            <summary>
            DefAccountNumber : 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.CustomerCode">
            <summary>
            CustomerId
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.CustomerInfor">
            <summary>
            CustomerInfor
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountingGroupId">
            <summary>
            AccountingGroupId : Accounting group in catalogue // important
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.ServiceId">
            <summary>
            ServiceId : Module function id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountingType">
            <summary>
            ACTYPE : can null, get from Accounting Module
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AccountName">
            <summary>
            ACNAME : can null, get from Accounting Module
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.Amount">
            <summary>
            Amount : Amount is changed in transaction 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.BaseAmount">
            <summary>
            BaseAmount
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.TransCurrencyId">
            <summary>
            CurrencyId 
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.DebitOrCredit">
            <summary>
            DebitOrCredit : Debit (D) , Credit (C)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AccountRefGLInfor.AlisasInformation">
            <summary>
            encond
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition">
            <summary>
            MultiValueName
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.UnderlineSign">
            <summary>
            ____ : WorkingBranhCode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.AsteriskSign">
            <summary>
            ** : shortCurrency
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.QuestionMark">
            <summary>
            ? : int.Parse(shortCurrency)  9 ? int.Parse(shortCurrency).ToString() : "9"
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.HashSign">
            <summary>
            #### Branch of Account number
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.DollarSign">
            <summary>
            $$
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.PlusSign">
            <summary>
            +
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.EqualsSign">
            <summary>
            =
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.ExclamationSign">
            <summary>
            !!
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.AlisasDefinition.CaretSign">
            <summary>
            ^
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel">
            <summary>
            Customer Info Models
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.CustomerId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.CustomerCode">
            <summary>
            CustomerCode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.CustomerType">
            <summary>
            CustomerType
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.Sector">
            <summary>
            Sector
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.Categories">
            <summary>
            Categories
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.ResidentStatus">
            <summary>
            Resident status
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.AccountResident">
            <summary>
            Resident
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.SubProduct">
            <summary>
            Sub product
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.InternationalId">
            <summary>
            InternalCode
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.CustomerSize">
            <summary>
            CustomerSize
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.AccountingGroupId">
            <summary>
            AccountingGroupId
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.AccountNumber">
            <summary>
            AccountNumber
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.CustomerInforModel.AccountBranchId">
            <summary>
            BranchId
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel">
            <summary>
            InterestFeeChargeModel
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.CurrencyFeeCode">
            <summary>
            CCRCD
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.CurrencyAccountCode">
            <summary>
            CCRID
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.CeillingValue">
            <summary>
            CEIVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.FloorValue">
            <summary>
            FLRVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.FeeAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.IFCCode">
            <summary>
            IFCCD
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.IFCValue">
            <summary>
            IFCVAL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.PayableRate">
            <summary>
            Pay Rate (PAYRATE)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.PayableSource">
            <summary>
            Pay Source (PAYSRC)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.ReceiveAmount">
            <summary>
            RAMT
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.ReceiveRate">
            <summary>
            RRATE
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.SendAmount">
            <summary>
            SAMT
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.ShareFeeApply">
            <summary>
            SFAPPL
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.SendRate">
            <summary>
            SRATE
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.CurrencyId">
            <summary>
            CurrencyId
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.ShortCurrencyId">
            <summary>
            ShortCurrencyId
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.StatusOfCurrency">
            <summary>
            StatusOfCurrency
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.DecimalDigits">
            <summary>
            DecimalDigits
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.IFCId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.IfcType">
            <summary>
            Ifc Code (IFCCD)
            </summary>
            <summary>
            Ifc Type (IFCTYPE)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.GroupId">
            <summary>
            Group Id (GRPID)
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.Posting.InterestFeeChargeModel.AlisasInformation">
            <summary>
            AlisasInformation
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.PagedListModel`2">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.PagedListModel`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Models.PagedListModel`2.#ctor(Jits.Neptune.Core.IPagedList{`0})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedListModel`2.TotalCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedListModel`2.TotalPages">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedListModel`2.HasPreviousPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedListModel`2.HasNextPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedListModel`2.Items">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.PagedModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedModel.PageIndex">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.PagedModel.PageSize">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Models.SimpleSearchModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.SimpleSearchModel.SearchText">
            <summary>
            Search query
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.SimpleSearchModel.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Models.SimpleSearchModel.PageIndex">
            <summary>
            Page index
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Mvc.ModelBinding.ModelStateExtensions">
            <summary>
            ModelState extensions
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.ModelBinding.ModelStateExtensions.SerializeModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)">
            <summary>
            
            </summary>
            <param name="modelState"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.ModelBinding.ModelStateExtensions.SerializeErrors(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Serialize errors
            </summary>
            <param name="modelStateDictionary"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Mvc.Routing.IRouteProvider">
            <summary>
            Route provider
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.Routing.IRouteProvider.RegisterRoutes(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Register routes
            </summary>
            <param name="endpointRouteBuilder"></param>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Mvc.Routing.IRouteProvider.Priority">
            <summary>
            Gets a priority of route provider
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Mvc.Routing.IRoutePublisher">
            <summary>
            Represents route publisher
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.Routing.IRoutePublisher.RegisterRoutes(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Register routes
            </summary>
            <param name="endpointRouteBuilder">Route builder</param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Mvc.Routing.RoutePublisher">
            <summary>
            Represents implementation of route publisher
            </summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Mvc.Routing.RoutePublisher._typeFinder">
            <summary>
            Type finder
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.Routing.RoutePublisher.#ctor(Jits.Neptune.Core.Infrastructure.ITypeFinder)">
            <summary>
            Constructor
            </summary>
            <param name="typeFidner"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Mvc.Routing.RoutePublisher.RegisterRoutes(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Register routes
            </summary>
            <param name="endpointRouteBuilder">Route builder</param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.NeptuneNotFoundException">
            <summary>
            Represents errors that occur during application execution
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.NeptuneNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the Exception class
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.NeptuneNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Exception class with a specified error message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.ClearCache(`0,Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer{`0}.EntityEventType)">
            <summary>
            Clear cache data
            </summary>
            <param name="entity">Entity</param>
            <param name="entityEventType">Entity event type</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.ClearCache(`0)">
            <summary>
            Clear cache data
            </summary>
            <param name="entity">Entity</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.RemoveByPrefix(System.String,System.Object[])">
            <summary>
            Removes items by cache key prefix
            </summary>
            <param name="prefix">Cache key prefix</param>
            <param name="prefixParameters">Parameters to create cache key prefix</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.Remove(Jits.Neptune.Core.Caching.CacheKey,System.Object[])">
            <summary>
            Remove the value with the specified key from the cache
            </summary>
            <param name="cacheKey">Cache key</param>
            <param name="cacheKeyParameters">Parameters to create cache key</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.HandleEvent(Jits.Neptune.Core.Events.EntityInsertedEvent{`0})">
            <summary>
            Handle entity inserted event
            </summary>
            <param name="eventMessage">Event message</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.HandleEvent(Jits.Neptune.Core.Events.EntityUpdatedEvent{`0})">
            <summary>
            Handle entity updated event
            </summary>
            <param name="eventMessage">Event message</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.CacheEventConsumer`1.HandleEvent(Jits.Neptune.Core.Events.EntityDeletedEvent{`0})">
            <summary>
            Handle entity deleted event
            </summary>
            <param name="eventMessage">Event message</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Caching.ClearCacheTask">
            <summary>
            Clear cache scheduled task implementation
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Caching.ClearCacheTask.Execute(System.Nullable{System.DateTime})">
            <summary>
            Executes a task
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.CommonService.GetUser(System.Int32)">
            <summary>
            Get user info
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.CommonService.GetTransactionNumber(System.String)">
            <summary>
            Get Transaction Number generated in Transaction Journal
            </summary>
            <param name="referenceId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.IAdminService.GetWorkingDate(System.Boolean)">
            <summary>
            Get working date
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.IAdminService.GetUser(System.Int32)">
            <summary>
            Get user info
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Configuration.INeptuneMappingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.INeptuneMappingService.GetById(System.Int32)">
            <summary>
            Gets a Neptune mapping by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.INeptuneMappingService.GetByStepCode(System.String)">
            <summary>
            Get Neptune service mapping by step code
            </summary>
            <param name="stepCode"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.INeptuneMappingService.GetByStepCodes(System.String[])">
            <summary>
            Get neptune service mappings by array of step codes
            </summary>
            <param name="stepCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.INeptuneMappingService.GetAll">
            <summary>
            Get all Neptune mapping
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.IPostingRuleService.ExportPostings(System.String)">
            <summary>
            Export GL Posting rule related to the Transaction Codes
            </summary>
            <param name="transactionCode"></param>
            <returns>JSON serialized of </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.IPostingRuleService.ImportPostings(System.String,System.String)">
            <summary>
            Import the GL Posting rules related to the Transaction Code
            </summary>
            <param name="transactionCode"></param>
            <param name="postings">JSON serialized of NeptuneServiceModel (include information of Step Code and GL Posting Rules related</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService">
            <summary>
            Setting service interface
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.GetSettingById(System.Int32)">
            <summary>
            Get setting by identifier
            </summary>
            <param name="settingId">Setting identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.DeleteSetting(Jits.Neptune.Core.Domain.Configuration.Setting)">
            <summary>
            Delete a setting
            </summary>
            <param name="setting">Setting</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.DeleteSettings(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Configuration.Setting})">
            <summary>
            Deletes settings
            </summary>
            <param name="settings">Settings</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.GetSetting(System.String,System.Int32,System.Boolean)">
            <summary>
            Get setting by key
            </summary>
            <param name="key">Key</param>
            <param name="organizationId">Organization identifier</param>
            <param name="loadSharedValueIfNotFound">A value indicating whether a shared (for all organizations) value should be loaded if a value specific for a certain is not found</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the setting
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.GetSettingByKey``1(System.String,``0,System.Int32,System.Boolean)">
            <summary>
            Get setting value by key
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="key">Key</param>
            <param name="organizationId">Organization identifier</param>
            <param name="defaultValue">Default value</param>
            <param name="loadSharedValueIfNotFound">A value indicating whether a shared (for all organization) value should be loaded if a value specific for a certain is not found</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the setting value
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SetSetting``1(System.String,``0,System.Int32,System.Boolean)">
            <summary>
            Set setting value
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="organizationId">Organization identifier</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the settings
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SearchCommon(Jits.Neptune.Web.Framework.Models.SimpleSearchModel)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SearchAdvance(Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.Get``1(System.String,``0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SettingExists``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32)">
            <summary>
            Determines whether a setting exists
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization identifier</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the rue -setting exists; false - does not exist
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.LoadSetting``1(System.Int32)">
            <summary>
            Load settings
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="organizationId">Organization identifier for which settings should be loaded</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.LoadSetting(System.Type,System.Int32)">
            <summary>
            Load settings
            </summary>
            <param name="type">Type</param>
            <param name="organizationId">Organization identifier for which settings should be loaded</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SaveSetting``1(``0,System.Int32)">
            <summary>
            Save settings object
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="organizationId">Organization identifier</param>
            <param name="settings">Setting instance</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.SaveSetting``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Boolean)">
            <summary>
            Save settings object
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization ID</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.DeleteSetting``1">
            <summary>
            Delete all settings
            </summary>
            <typeparam name="T">Type</typeparam>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.DeleteSetting``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32)">
            <summary>
            Delete settings object
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization ID</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.ClearCache">
            <summary>
            Clear cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.ISettingService.GetSettingKey``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Get setging key (stored into database)
            </summary>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <typeparam name="TSettings">Type of settings</typeparam>
            <typeparam name="T">Property type</typeparam>
            <returns>Key</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneConfigurationDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneConfigurationDefaults.SettingsAllAsDictionaryCacheKey">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.NeptuneService},Jits.Neptune.Core.Caching.IStaticCacheManager)">
            <summary>
            Constructor
            </summary>
            <param name="mappingRepository"></param>
            <param name="staticCacheManager"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService.GetById(System.Int32)">
            <summary>
            Gets a Neptune mapping by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService.GetByStepCode(System.String)">
            <summary>
            Get Neptune service mapping by step code
            </summary>
            <param name="stepCode"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService.GetByStepCodes(System.String[])">
            <summary>
            Get neptune service mappings by array of step codes
            </summary>
            <param name="stepCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.NeptuneMappingService.GetAll">
            <summary>
            Get all Neptune mapping
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Configuration.SettingService">
            <summary>
            Setting manager
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Configuration.Setting},Jits.Neptune.Core.Caching.IStaticCacheManager)">
            <summary>
            
            </summary>
            <param name="settingRepository"></param>
            <param name="staticCacheManager"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetAllSettingsDictionary">
            <summary>
            Gets all settings
            </summary>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the settings
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SetSetting(System.Type,System.String,System.Object,System.Int32,System.Boolean)">
            <summary>
            Set setting value
            </summary>
            <param name="type">Type</param>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="organizationId">Organization identifier</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.InsertSetting(Jits.Neptune.Core.Domain.Configuration.Setting,System.Boolean)">
            <summary>
            Adds a setting
            </summary>
            <param name="setting">Setting</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.UpdateSetting(Jits.Neptune.Core.Domain.Configuration.Setting,System.Boolean)">
            <summary>
            Updates a setting
            </summary>
            <param name="setting">Setting</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.DeleteSetting(Jits.Neptune.Core.Domain.Configuration.Setting)">
            <summary>
            Deletes a setting
            </summary>
            <param name="setting">Setting</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.DeleteSettings(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Configuration.Setting})">
            <summary>
            Deletes settings
            </summary>
            <param name="settings">Settings</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetSettingById(System.Int32)">
            <summary>
            Gets a setting by identifier
            </summary>
            <param name="settingId">Setting identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetSetting(System.String,System.Int32,System.Boolean)">
            <summary>
            Get setting by key
            </summary>
            <param name="key">Key</param>
            <param name="organizationId">Organization identifier</param>
            <param name="loadSharedValueIfNotFound">A value indicating whether a shared (for all stores) value should be loaded if a value specific for a certain is not found</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the setting
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetSettingByKey``1(System.String,``0,System.Int32,System.Boolean)">
            <summary>
            Get setting value by key
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="key">Key</param>
            <param name="defaultValue">Default value</param>
            <param name="organizationId">Organization identifier</param>
            <param name="loadSharedValueIfNotFound">A value indicating whether a shared (for all organizations) value should be loaded if a value specific for a certain is not found</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the setting value
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SetSetting``1(System.String,``0,System.Int32,System.Boolean)">
            <summary>
            Set setting value
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="organizationId">Organization identifier</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SearchCommon(Jits.Neptune.Web.Framework.Models.SimpleSearchModel)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SearchAdvance(Jits.Neptune.Web.Framework.Models.AdvanceSearchParamModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.Get``1(System.String,``0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SettingExists``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32)">
            <summary>
            Determines whether a setting exists
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <param name="settings">Entity</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization identifier</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the rue -setting exists; false - does not exist
            </returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.LoadSetting``1(System.Int32)">
            <summary>
            Load settings
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="organizationId">Store identifier for which settings should be loaded</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.LoadSetting(System.Type,System.Int32)">
            <summary>
            Load settings
            </summary>
            <param name="type">Type</param>
            <param name="organizationId">Store identifier for which settings should be loaded</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SaveSetting``1(``0,System.Int32)">
            <summary>
            Save settings object
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="organizationId">Organization identifier</param>
            <param name="settings">Setting instance</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.SaveSetting``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Boolean)">
            <summary>
            Save settings object
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization ID</param>
            <param name="clearCache">A value indicating whether to clear cache after setting update</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.DeleteSetting``1">
            <summary>
            Deletes all settings
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.DeleteSetting``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32)">
            <summary>
            Delete settings object
            </summary>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <param name="organizationId">Organization ID</param>
            <typeparam name="T">Entity type</typeparam>
            <typeparam name="TPropType">Property type</typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.ClearCache">
            <summary>
            Clear cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Configuration.SettingService.GetSettingKey``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Get setging key (stored into database)
            </summary>
            <param name="settings">Settings</param>
            <param name="keySelector">Key selector</param>
            <typeparam name="TSettings">Type of settings</typeparam>
            <typeparam name="T">Property type</typeparam>
            <returns>Key</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.EntityFieldService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.EntityFieldService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.EntityField},Jits.Neptune.Core.Caching.IStaticCacheManager,Jits.Neptune.Core.IWorkContext)">
            <summary>
            Ctor
            </summary>
            <param name="fieldRepository"></param>
            <param name="staticCacheManager"></param>
            <param name="workContext"></param>   
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.EntityFieldService.GetById(System.Int32)">
            <summary>
            Gets a sync Data by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.EntityFieldService.GetByEntityField(System.String,System.String,System.String,System.String)">
            <summary>
            /
            </summary>
            <param name="entityName"></param>
            <param name="entityField"></param>
            <param name="lang"></param>
            <param name="moduleCode"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Events.EventPublisher">
            <summary>
            Represents the event publisher implementation
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Events.EventPublisher.Publish``1(``0)">
            <summary>
            Publish event to consumers
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Events.IConsumer`1">
            <summary>
            Consumer interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Events.IConsumer`1.HandleEvent(`0)">
            <summary>
            Handle event
            </summary>
            <param name="eventMessage">Event</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Grpc.BatchGrpcService">
            <summary>
            Batch grpc service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Grpc.BatchGrpcService.CallBatchStore(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Call Batch Store
            </summary>
            <param name="storeName"></param>
            <param name="transactionNumber"></param>
            <param name="dateString"></param>
            <param name="userCode"></param>
            <param name="userName"></param>
            <param name="batchDateString"></param>
            <param name="stepName"></param>
            <param name="refId"></param>
            <param name="referenceId"></param>
            <param name="description"></param>/// 
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Grpc.IBatchGrpcService">
            <summary>
            Batch grpc service
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Grpc.NeptuneGrpcService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Grpc.NeptuneGrpcService.GrpcInvocableMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.Grpc.NeptuneGrpcService.GrpcInvocableMethod.MethodDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ICommonService.GetUser(System.Int32)">
            <summary>
            Get user info
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ICommonService.GetTransactionNumber(System.String)">
            <summary>
            Get Transaction Number generated in Transaction Journal
            </summary>
            <param name="referenceId"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.IEntityFieldService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IEntityFieldService.GetById(System.Int32)">
            <summary>
            Gets an Entity field by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IEntityFieldService.GetByEntityField(System.String,System.String,System.String,System.String)">
            <summary>
            /
            </summary>
            <param name="entityName"></param>
            <param name="entityField"></param>
            <param name="lang"></param>
            <param name="moduleCode"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.IJwtTokenService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IJwtTokenService.GetNewJwtToken(Jits.Neptune.Core.Domain.Users.User,System.Int64)">
            <summary>
            Generate new JWT token
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.IJwtTokenService.NewSecretKey">
            <summary>
            Create a new secret key
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IJwtTokenService.GetUsernameFromToken(System.String)">
            <summary>
            Get user name from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IJwtTokenService.GetLoginNameFromToken(System.String)">
            <summary>
            Get Loginname from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IJwtTokenService.GetUserCodeFromToken(System.String)">
            <summary>
            Get user code from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IJwtTokenService.GetBranchCodeFromToken(System.String)">
            <summary>
            Get branch code from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.ISyncDataService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.GetById(System.Int32)">
            <summary>
            Gets a Sync data by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.GetByEntity(System.String,System.String)">
            <summary>
            /
            </summary>
            <param name="moduleCode"></param>
            <param name="entityName"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.Insert(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Insert a new sync data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.Update(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Update the sync data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.Delete(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Delete a sync data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.GetNewData``1(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Get new data for sync
            </summary>
            <param name="syncData"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncDataService.SyncData``1(System.String,System.String,System.Func{System.Collections.Generic.List{``0},System.Threading.Tasks.Task})">
            <summary>
            Sync data
            </summary>
            <param name="moduleCode"></param>
            <param name="entityName"></param>
            <param name="acquire"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.ISyncRegistryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.GetById(System.Int32)">
            <summary>
            Gets a Sync registry by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.ListByEntity``1(``0)">
            <summary>
            List registried services need to sync the entity
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.Insert(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Insert a new sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.Update(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Update the sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.Delete(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Delete a sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ISyncRegistryService.PublishSync``1(``0,System.String)">
            <summary>
            Call from event consumer, call grpc sync method
            </summary>
            <param name="entity"></param>
            <param name="action">Insert/Update/Delete</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService">
            <summary>
            Transaction details service interface
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.GetById(System.Int32)">
            <summary>
            Gets a transaction details by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.GetByEntityField(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets a transaction details by reference identifier, entity name, and field name
            </summary>
            <param name="refId"></param>
            <param name="entity"></param>
            <param name="field"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.ListByRefId(System.String)">
            <summary>
            List all details by reference identifier
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.ListByRefIdAndEntity(System.String,System.String)">
            <summary>
            List all details by reference identifier and entity name
            </summary>
            <param name="refId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.ListByEntity(System.String,System.Int32,System.String,System.String)">
            <summary>
            List all details by entity and its identifier
            </summary>
            <param name="entity"></param>
            <param name="id"></param>
            <param name="refId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.BulkInsert(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails})">
            <summary>
            Insert a new transaction details
            </summary>
            <param name="details"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.Reverse(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},System.Boolean,System.Boolean)">
            <summary>
            Reverse transaction details
            </summary>
            <param name="details"></param>
            <param name="forceReverse"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionDetailsService.Reverse(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Reverse transaction details related to entity
            </summary>
            <param name="details"></param>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="forceReverse"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.ITransactionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.GetById(System.Int32)">
            <summary>
            Gets a transaction by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.GetByRefId(System.String)">
            <summary>
            Gets a transaction by reference identifier
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.GetByTransactionNumber(System.String)">
            <summary>
            Gets a transaction by transaction number
            </summary>
            <param name="transactionNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.RemoveMissingTransactionNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.ListMissingTransactionNumber">
            <summary>
            List transation that not have transaction number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.Insert(Jits.Neptune.Core.Domain.Neptune.Transaction)">
            <summary>
            Insert a new transaction
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.Reverse(System.String,System.Boolean)">
            <summary>
            Reverse a transaction by referenceId
            </summary>
            <param name="refId"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.Reverse">
            <summary>
            Reverse a transaction by referecne id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ITransactionService.ListAuditTransactions``1(``0,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="showCompleteOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IWorkflowService.GetExecutionInfo(System.String)">
            <summary>
            Get Neptune execution info
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.IWorkflowService.GetExecutionStepInfo``1(System.String,System.String,System.String)">
            <summary>
            Get step execution info 
            </summary>
            <param name="executionId"></param>
            <param name="stepCode"></param>
            <param name="nodeName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.JwtTokenService">
            <summary>
            Jwt Token Service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.#ctor(Jits.Neptune.Web.Framework.WebApiSettings)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.GetNewJwtToken(Jits.Neptune.Core.Domain.Users.User,System.Int64)">
            <summary>
            Generate new JWT token
            </summary>
            <param name="user"></param>
            <param name="expireSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.JwtTokenService.NewSecretKey">
            <summary>
            Create a new secret key
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.GetUsernameFromToken(System.String)">
            <summary>
            Get username from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.GetLoginNameFromToken(System.String)">
            <summary>
            Get Loginname from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.GetUserCodeFromToken(System.String)">
            <summary>
            Get user code from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.JwtTokenService.GetBranchCodeFromToken(System.String)">
            <summary>
            Get branch code from a token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Localization.ILanguageService">
            <summary>
            Language service interface
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILanguageService.GetAll">
            <summary>
            Gets all languages
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILanguageService.GetById(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="languageId">Language identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILanguageService.GetByCode(System.String)">
            <summary>
            Gets a language
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService">
            <summary>
            Localization manager interface
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.GetAll(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="resource"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.GetById(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="localeStringResourceId">Locale string resource identifier</param>
            <returns>The task result contains the locale string resource</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.GetByName(System.String,System.String)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="resourceName">A string representing a resource name</param>
            <param name="language">Language</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.GetResource(System.String)">
            <summary>
            Gets a resource string based on the specified ResourceKey property
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.GetResource(System.String,System.String,System.String)">
            <summary>
            Gets a resource string based on the specified ResourceKey property
            </summary>
            <param name="resourceKey"></param>
            <param name="language"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.AddLocaleResource(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Add locale resources
            </summary>
            <param name="resources"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService.DeleteLocaleResources(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Delete locale resources
            </summary>
            <param name="resourceNames"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Localization.LanguageService">
            <summary>
            Language service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LanguageService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Localization.Language},Jits.Neptune.Core.Caching.IStaticCacheManager)">
            <summary>
            Constructor
            </summary>
            <param name="languageRepository"></param>
            <param name="staticCacheManager"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LanguageService.GetAll">
            <summary>
            Gets all language
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LanguageService.GetById(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="languageId">Language identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LanguageService.GetByCode(System.String)">
            <summary>
            Gets a language
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService">
            <summary>
            Provides information about localization
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.#ctor(Jits.Neptune.Web.Framework.Services.Logging.ILogger,Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Localization.LocaleStringResource},Jits.Neptune.Core.Caching.IStaticCacheManager,Jits.Neptune.Core.IWorkContext)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="lsrRepository"></param>
            <param name="staticCacheManager"></param>
            <param name="workContext"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.GetAll(System.String,System.Int32,System.Int32)">
            <summary>
            Gets all resource
            </summary>
            <param name="resource"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.GetById(System.Int32)">
            <summary>
            Get a resource by identifier
            </summary>
            <param name="localeStringResourceId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.GetByName(System.String,System.String)">
            <summary>
            Get a resource by name
            </summary>
            <param name="resourceName"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.GetResource(System.String)">
            <summary>
            Gets a resource
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.GetResource(System.String,System.String,System.String)">
            <summary>
            Get locale resource value
            </summary>
            <param name="resourceKey"></param>
            <param name="language"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.AddLocaleResource(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Add aa new locale resource
            </summary>
            <param name="resources"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizationService.DeleteLocaleResources(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Deletes a locale resource
            </summary>
            <param name="resourceNames"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Localization.LocalizedUrlExtensions">
            <summary>
            Represents extensions for localized URLs
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizedUrlExtensions.IsLocalizedUrl(System.String,Microsoft.AspNetCore.Http.PathString,System.Boolean)">
            <summary>
            Get a value indicating whether URL is localized (contains SEO code)
            </summary>
            <param name="url"></param>
            <param name="pathBase"></param>
            <param name="isRawPath"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Localization.LocalizedUrlExtensions.RemoveApplicationPathFromRawUrl(System.String,Microsoft.AspNetCore.Http.PathString)">
            <summary>
            Remove application path from raw URL
            </summary>
            <param name="rawUrl">Raw URL</param>
            <param name="pathBase">Application path base</param>
            <returns>Result</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Logging.ClearLogTask">
            <summary>
            Represents a task to clear Log table
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ClearLogTask.#ctor(Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger">
            <summary>
            Default logger
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Logging.Log},Jits.Neptune.Core.IWorkContext)">
            <summary>
            Constructor
            </summary>
            <param name="logRepository"></param>
            <param name="workContext"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.IsEnabled(Jits.Neptune.Core.Domain.Logging.LogLevel)">
            <summary>
            Determines whether a log level is enabled
            </summary>
            <param name="level">Log level</param>
            <returns>Result</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Delete(Jits.Neptune.Core.Domain.Logging.Log)">
            <summary>
            Deletes a log
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Clear(System.Nullable{System.DateTime})">
            <summary>
            Clear all logs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Jits.Neptune.Core.Domain.Logging.LogLevel},System.Int32,System.Int32)">
            <summary>
            Gets all logs
            </summary>
            <param name="fromUtc"></param>
            <param name="toUtc"></param>
            <param name="message"></param>
            <param name="logLevel"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.GetById(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="logId">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Insert(Jits.Neptune.Core.Domain.Logging.LogLevel,System.String,System.String,Jits.Neptune.Core.Domain.Users.User,System.String)">
            <summary>
            Insert a new log
            </summary>
            <param name="logLevel"></param>
            <param name="shortMessage"></param>
            <param name="fullMessage"></param>
            <param name="user"></param>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Information(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User)">
            <summary>
            Information
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Warning(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User)">
            <summary>
            Warning
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.DefaultLogger.Error(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User,System.String)">
            <summary>
            Error
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Logging.ILogger">
            <summary>
            Logger interface
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Delete(Jits.Neptune.Core.Domain.Logging.Log)">
            <summary>
            Delets a log
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Clear(System.Nullable{System.DateTime})">
            <summary>
            Clear all logs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Jits.Neptune.Core.Domain.Logging.LogLevel},System.Int32,System.Int32)">
            <summary>
            Gets all logs
            </summary>
            <param name="fromUtc"></param>
            <param name="toUtc"></param>
            <param name="message"></param>
            <param name="logLevel"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.GetById(System.Int32)">
            <summary>
            Get a log by identifier
            </summary>
            <param name="logId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Insert(Jits.Neptune.Core.Domain.Logging.LogLevel,System.String,System.String,Jits.Neptune.Core.Domain.Users.User,System.String)">
            <summary>
            Insert a log item
            </summary>
            <param name="logLevel"></param>
            <param name="shortMessage"></param>
            <param name="fullMessage"></param>
            <param name="user"></param>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Information(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User)">
            <summary>
            Information
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Warning(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User)">
            <summary>
            Warning
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Logging.ILogger.Error(System.String,System.Exception,Jits.Neptune.Core.Domain.Users.User,System.String)">
            <summary>
            Error
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
            <param name="user"></param>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService.GetById(System.Int32)">
            <summary>
            Gets a master mapping by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService.GetByMasterClass(System.String)">
            <summary>
            Gets a master mapping by master class name
            </summary>
            <param name="masterClass"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService.Insert(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Insert a new master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService.Update(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Update the master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService.Delete(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Delete a master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService.GetById(System.Int32)">
            <summary>
            Gets a transaction action by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService.ListByCode(System.String)">
            <summary>
            List transaction actions by transaction code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService.CreateGLEntry``1(System.String,Jits.Neptune.Web.Framework.Models.BaseTransactionModel,``0,System.Decimal,System.String,System.String,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Generate GL Entries for the transaction
            </summary>
            <param name="transId"></param>
            <param name="transaction"></param>
            <param name="master"></param>
            <param name="amount"></param>
            <param name="sysAccountName"></param>
            <param name="dorc"></param>
            <param name="crossBranchCode"></param>
            <param name="crossCurrencyCode"></param>
            <param name="baseCurrencyAmount"></param>
            <param name="accountingGroup"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.ITransactionActionService.Execute``1(Jits.Neptune.Web.Framework.Models.BaseTransactionModel,``0,System.String,System.Decimal,System.String,System.String,System.Decimal,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="master"></param>
            <param name="code"></param>
            <param name="amount"></param>
            <param name="crossBranchCode"></param>
            <param name="crossCurrencyCode"></param>
            <param name="baseCurrencyAmount"></param>
            <param name="statementCode"></param>
            <param name="refNumber"></param>
            <param name="accountingGroup"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.MasterMapping},Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Ctor
            </summary>
            <param name="mappingRepository"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.GetById(System.Int32)">
            <summary>
            Gets a transaction action by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.GetByMasterClass(System.String)">
            <summary>
            Gets a master mapping by master object class name
            </summary>
            <param name="masterClass"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.Insert(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Insert a new master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.Update(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Updates the master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.MasterMappingService.Delete(Jits.Neptune.Core.Domain.Neptune.MasterMapping)">
            <summary>
            Deletes a master mapping
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.TransactionAction},Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.GLEntries},Jits.Neptune.Web.Framework.Services.Neptune.IMasterMappingService,Jits.Neptune.Web.Framework.Services.Neptune.IGLEntriesService,Jits.Neptune.Web.Framework.Services.ITransactionService,Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Ctor
            </summary>
            <param name="actionRepository"></param>
            <param name="glEntriesRepository"></param>
            <param name="mappingService"></param>
            <param name="entriesService"></param>
            <param name="transactionService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.GetById(System.Int32)">
            <summary>
            Gets a transaction action by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.ListByCode(System.String)">
            <summary>
            List transaction actions by transaction code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.UpdateMasterFields``2(``0,``1,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="master"></param>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="E"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.GetGL(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get GL Account from config
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.CreateGLEntry``1(System.String,Jits.Neptune.Web.Framework.Models.BaseTransactionModel,``0,System.Decimal,System.String,System.String,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Generate GL Entries for the transaction
            </summary>
            <param name="transId"></param>
            <param name="transaction"></param>
            <param name="master"></param>
            <param name="amount"></param>
            <param name="sysAccountName"></param>
            <param name="dorc"></param>
            <param name="crossBranchCode"></param>
            <param name="crossCurrencyCode"></param>
            <param name="baseCurrencyAmount"></param>
            <param name="accountingGroup"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.TransactionActionService.Execute``1(Jits.Neptune.Web.Framework.Models.BaseTransactionModel,``0,System.String,System.Decimal,System.String,System.String,System.Decimal,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="master"></param>
            <param name="code"></param>
            <param name="amount"></param>
            <param name="crossBranchCode"></param>
            <param name="crossCurrencyCode"></param>
            <param name="baseCurrencyAmount"></param>
            <param name="statementCode"></param>
            <param name="refNumber"></param>
            <param name="accountingGroup"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Neptune.BaseEntityExtensions.GetMasterRelatedStringField(Jits.Neptune.Core.BaseEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.NeptuneServiceManager">
            <summary>
            Represents the Neptune service mappings manager
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.PortalApiHttpClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.PortalApiHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.PortalApiHttpClient.CallAPI(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="method"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService">
            <summary>
            Base Queue Service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Success(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,System.String,System.Object)">
            <summary>
            Return workflow with Success status
            </summary>
            <param name="workflow"></param>
            <param name="name"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Success(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,System.Object)">
            <summary>
            Return workflow with Success status
            </summary>
            <param name="workflow"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Error``1(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,FluentValidation.Results.ValidationResult,System.String)">
            <summary>
            Return workflow with Error status
            </summary>
            <param name="workflow"></param>
            <param name="validationResult">Validation results</param>
            <param name="errorMessage">Validation results</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Error(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,Jits.Neptune.Core.NeptuneException)">
            <summary>
            Return workflow with Error status
            </summary>
            <param name="workflow"></param>
            <param name="exception">Validation results</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Error(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,System.Exception)">
            <summary>
            Return workflow with Error status
            </summary>
            <param name="workflow"></param>
            <param name="exception">Validation results</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Invoke``1(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,System.Func{System.Threading.Tasks.Task{System.Object}},System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="workflow"></param>
            <param name="acquire"></param>
            <param name="keyName"></param>
            <param name="removeSensitive"></param>
            <typeparam name="TModel"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.BaseQueueService.Invoke``1(JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme,System.Func{System.Threading.Tasks.Task{System.Object}},System.Func{System.Threading.Tasks.Task{JITS.NeptuneClient.Scheme.Workflow.WorkflowScheme}},System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="workflow"></param>
            <param name="acquire"></param>
            <param name="addInformation"></param>
            <param name="keyName"></param>
            <param name="removeSensitive"></param>
            <typeparam name="TModel"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Queue.KeepConnectionTask">
            <summary>
            Check if connection not available, then create new instance of queue client
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.KeepConnectionTask.Execute(System.Nullable{System.DateTime})">
            <summary>
            Executes a task
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Queue.QueueContext">
            <summary>
            Check if connection not available, then create new instance of queue client
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Queue.QueueContext.GetInstance">
            <summary>
            Get the singleton Queue Client
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTask.Execute(System.Nullable{System.DateTime})">
            <summary>
            Executes a task
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskRunner.Execute(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Executes the task
            </summary>
            <param name="scheduleTask">Schedule task</param>
            <param name="forceRun">Force run</param>
            <param name="throwException">A value indicating whether exception should be thrown if some error happens</param>
            <param name="ensureRunOncePerPeriod">A value indicating whether we should ensure this task is run once per run period</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.Delete(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Deletes a task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.GetById(System.Int32)">
            <summary>
            Gets a task
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.GetByType(System.String)">
            <summary>
            Gets a task by its type
            </summary>
            <param name="type">Task type</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.GetAll(System.Boolean)">
            <summary>
            Get all tasks
            </summary>
            <param name="showHidden"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.Insert(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Inserts a task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.IScheduleTaskService.Update(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Updates the task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ITaskScheduler.Initialize">
            <summary>
            Initializes task scheduler
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ITaskScheduler.ReInitialize">
            <summary>
            Reset the scheduler
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ITaskScheduler.StartScheduler">
            <summary>
            Starts the task scheduler
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ITaskScheduler.StopScheduler">
            <summary>
            Stops the task scheduler
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskRunner">
            <summary>
            Schedule task runner
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskRunner.ExecuteTask(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Initialize and execute task
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskRunner.IsTaskAlreadyRunning(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Is task already running?
            </summary>
            <param name="scheduleTask">Schedule task</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskRunner.Execute(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Executes the task
            </summary>
            <param name="scheduleTask">Schedule task</param>
            <param name="forceRun">Force run</param>
            <param name="throwException">A value indicating whether exception should be thrown if some error happens</param>
            <param name="ensureRunOncePerPeriod">A value indicating whether we should ensure this task is run once per run period</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.Delete(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Deletes a task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.GetById(System.Int32)">
            <summary>
            Gets a task
            </summary>
            <param name="taskId">Task identifier</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.GetByType(System.String)">
            <summary>
            Gets a task by its type
            </summary>
            <param name="type">Task type</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.GetAll(System.Boolean)">
            <summary>
            Gets all tasks
            </summary>
            <param name="showHidden"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.Insert(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Inserts a task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.ScheduleTaskService.Update(Jits.Neptune.Core.Domain.ScheduleTasks.ScheduleTask)">
            <summary>
            Updates the task
            </summary>
            <param name="task">Task</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.Initialize">
            <summary>
            Initialize the task manager
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.ReInitialize">
            <summary>
            Reset the scheduler
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.InitTimer">
            <summary>
            Inits a timer
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.Seconds">
            <summary>
            Gets or sets the interval in seconds at which to run the tasks
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.InitSeconds">
            <summary>
            Gets or sets the interval before timer first start
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.StartedUtc">
            <summary>
            Get or sets a datetime when thread has been started
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.IsRunning">
            <summary>
            Gets or sets a value indicating whether thread is running
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.Interval">
            <summary>
            Gets the interval (in milliseconds) at which to run the task
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.InitInterval">
            <summary>
            Gets the due time interval (in milliseconds) at which to begin start the task
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.RunOnlyOnce">
            <summary>
            Gets or sets a value indicating whether the thread would be run only once (on application start)
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.IsStarted">
            <summary>
            Gets a value indicating whether the timer is started
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Services.ScheduleTasks.TaskScheduler.TaskThread.IsDisposed">
            <summary>
            Gets a value indicating whether the timer is disposed
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Security.EncryptionService">
            <summary>
            Encryption service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.EncryptionService.CreateSaltKey(System.Int32)">
            <summary>
            Create salt key
            </summary>
            <param name="size">Key size</param>
            <returns>Salt key</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.EncryptionService.CreatePasswordHash(System.String,System.String,System.String)">
            <summary>
            Create a password hash
            </summary>
            <param name="password">Password</param>
            <param name="saltkey">Salk key</param>
            <param name="passwordFormat">Password format (hash algorithm)</param>
            <returns>Password hash</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.EncryptionService.EncryptText(System.String,System.String,System.String)">
            <summary>
            Encrypt text
            </summary>
            <param name="plainText">Text to encrypt</param>
            <param name="encryptionPrivateKey">Encryption private key</param>
            <param name="encryptType"></param>
            <returns>Encrypted text</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.EncryptionService.DecryptText(System.String,System.String,System.String)">
            <summary>
            Decrypt text
            </summary>
            <param name="cipherText">Text to decrypt</param>
            <param name="encryptionPrivateKey">Encryption private key</param>
            <param name="encryptType"></param>
            <returns>Decrypted text</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.Security.IEncryptionService">
            <summary>
            Encryption service
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.IEncryptionService.CreateSaltKey(System.Int32)">
            <summary>
            Create salt key
            </summary>
            <param name="size">Key size</param>
            <returns>Salt key</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.IEncryptionService.CreatePasswordHash(System.String,System.String,System.String)">
            <summary>
            Create a password hash
            </summary>
            <param name="password">Password</param>
            <param name="saltKey">Salk key</param>
            <param name="passwordFormat">Password format (hash algorithm)</param>
            <returns>Password hash</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.IEncryptionService.EncryptText(System.String,System.String,System.String)">
            <summary>
            Encrypt text
            </summary>
            <param name="plainText">Text to encrypt</param>
            <param name="encryptionPrivateKey">Encryption private key</param>
            <param name="encryptType"></param>
            <returns>Encrypted text</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.Security.IEncryptionService.DecryptText(System.String,System.String,System.String)">
            <summary>
            Decrypt text
            </summary>
            <param name="cipherText">Text to decrypt</param>
            <param name="encryptionPrivateKey">Encryption private key</param>
            <param name="encryptType"></param>
            <returns>Decrypted text</returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.SyncDataService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.SyncData},Jits.Neptune.Web.Framework.Services.Grpc.IGrpcService,Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Ctor
            </summary>
            <param name="syncRepository"></param>
            <param name="grpcService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.GetById(System.Int32)">
            <summary>
            Gets a sync Data by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.GetByEntity(System.String,System.String)">
            <summary>
            /
            </summary>
            <param name="moduleCode"></param>
            <param name="entityName"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.Insert(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Insert a sync Data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.Update(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Updates the sync Data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.Delete(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Deletes a sync Data
            </summary>
            <param name="syncData"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.GetNewData``1(Jits.Neptune.Core.Domain.Neptune.SyncData)">
            <summary>
            Get new data for sync
            </summary>
            <param name="syncData"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncDataService.SyncData``1(System.String,System.String,System.Func{System.Collections.Generic.List{``0},System.Threading.Tasks.Task})">
            <summary>
            Sync data
            </summary>
            <param name="moduleCode"></param>
            <param name="entityName"></param>
            <param name="acquire"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.SyncRegistryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.SyncRegistry},Jits.Neptune.Web.Framework.Services.Grpc.IGrpcService,Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Ctor
            </summary>
            <param name="syncRepository"></param>
            <param name="grpcService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.GetById(System.Int32)">
            <summary>
            Gets a sync registry by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.ListByEntity``1(``0)">
            <summary>
            List registried services need to sync the entity
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.Insert(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Insert a sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.Update(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Updates the sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.Delete(Jits.Neptune.Core.Domain.Neptune.SyncRegistry)">
            <summary>
            Deletes a sync registry
            </summary>
            <param name="syncRegistry"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.SyncRegistryService.PublishSync``1(``0,System.String)">
            <summary>
            Call from event consumer, call grpc sync method
            </summary>
            <param name="entity"></param>
            <param name="action">Insert/Update/Delete</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.TransactionDetailsService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.Transaction},Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},Jits.Neptune.Web.Framework.Services.Logging.ILogger)">
            <summary>
            Ctor
            </summary>
            <param name="transactionRepository"></param>
            <param name="detailsRepository"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.GetById(System.Int32)">
            <summary>
            Gets a transaction by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.GetByEntityField(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets a transaction details by reference identifier, entity name, and field name
            </summary>
            <param name="refId"></param>
            <param name="entity"></param>
            <param name="field"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.ListByRefId(System.String)">
            <summary>
            List all details by ref identifier
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.ListByRefIdAndEntity(System.String,System.String)">
            <summary>
            List all details by reference identifier and entity name
            </summary>
            <param name="refId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.ListByEntity(System.String,System.Int32,System.String,System.String)">
            <summary>
            List all details by entity and its identifier
            </summary>
            <param name="entity"></param>
            <param name="id"></param>
            <param name="refId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.BulkInsert(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails})">
            <summary>
            Insert a new transaction details
            </summary>
            <param name="details"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.Reverse(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},System.Boolean,System.Boolean)">
            <summary>
            Reverse transaction details
            </summary>
            <param name="details"></param>
            <param name="forceReverse"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionDetailsService.Reverse(System.Collections.Generic.IList{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Reverse transaction details related to entity
            </summary>
            <param name="details"></param>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="forceReverse"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.TransactionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.#ctor(Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.Transaction},Jits.Neptune.Data.IRepository{Jits.Neptune.Core.Domain.Neptune.TransactionDetails},Jits.Neptune.Web.Framework.Services.ITransactionDetailsService,Jits.Neptune.Core.IWorkContext,Jits.Neptune.Web.Framework.Services.ICommonService,Jits.Neptune.Web.Framework.Services.IEntityFieldService)">
            <summary>
            Ctor
            </summary>
            <param name="transactionRepository"></param>
            <param name="detailRepository"></param>
            <param name="detailService"></param>
            <param name="workContext"></param>
            <param name="commonService"></param>
            <param name="fieldService"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.GetById(System.Int32)">
            <summary>
            Gets a transaction by identifier
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.GetByRefId(System.String)">
            <summary>
            Gets a transaction by reference identifier
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.GetByTransactionNumber(System.String)">
            <summary>
            Gets a transaction by transaction number
            </summary>
            <param name="transactionNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.RemoveMissingTransactionNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.ListMissingTransactionNumber">
            <summary>
            List transation that not have transaction number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.Insert(Jits.Neptune.Core.Domain.Neptune.Transaction)">
            <summary>
            Insert a transaction
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.Reverse(System.String,System.Boolean)">
            <summary>
            Reverse a transaction by referenceId
            </summary>
            <param name="refId"></param>
            <param name="removeInsert"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.TransactionService.Reverse">
            <summary>
            Reverse a transaction by referecne id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Services.WebApiHttpClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.WebApiHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.WorkflowService.GetExecutionInfo(System.String)">
            <summary>
            Get Neptune execution info
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Services.WorkflowService.GetExecutionStepInfo``1(System.String,System.String,System.String)">
            <summary>
            Get step execution info 
            </summary>
            <param name="executionId"></param>
            <param name="stepCode"></param>
            <param name="nodeName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardsTagHelper">
            <summary>
            "neptune-cars" tag helper
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardsTagHelper.ViewContext">
            <summary>
            ViewContext
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.Title">
            <summary>
            Title of the card
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.Name">
            <summary>
            Name of the card
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.HideBlockAttributeName">
            <summary>
            Name of the hide attribute of the card
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.IsHide">
            <summary>
            Indicates whether a block is hidden or not
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.IsAdvanced">
            <summary>
            Indicates whether a card is advanced or not
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.CardIconIsAdvanced">
            <summary>
            Card icon
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneCardTagHelper.ViewContext">
            <summary>
            ViewContext
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.TagHelpers.NeptuneLabelTagHelper">
            <summary>
            Label tag helper
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneLabelTagHelper.For">
            <summary>
            An expression to be evaluated against the current model
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneLabelTagHelper.DisplayHint">
            <summary>
            Indicates whether the hint should be displayed
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneLabelTagHelper.ViewContext">
            <summary>
            ViewContext
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.TagHelpers.NeptuneLabelTagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Asynchronously executes the tag helper with the given context and output
            </summary>
            <param name="context">Contains information associated with the current HTML tag</param>
            <param name="output">A stateful HTML element used to generate an HTML tag</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.TagHelpers.NeptuneTextAreaTagHelper">
            <summary>
            "neptune-textarea" tag helper
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneTextAreaTagHelper.CustomHtmlAttributes">
            <summary>
            Custom html attributes
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.TagHelpers.NeptuneTextAreaTagHelper.IsRequired">
            <summary>
            Indicates whether the field is required
            </summary>
            <value></value>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.TagHelpers.NeptuneTextAreaTagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Asynchronously executes the tag helper with the given context and output
            </summary>
            <param name="context">Contains information associated with the current HTML tag</param>
            <param name="output">A stateful HTML element used to generate an HTML tag</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.UI.INeptuneHtmlHelper.SetActiveMenuItemSystemName(System.String)">
            <summary>
            Specify system name of menu item that should be selected
            </summary>
            <param name="systemName"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.UI.INeptuneHtmlHelper.GetActiveMenuItemSystemName">
            <summary>
            Get system name of menu item that should be selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.UI.NeptuneHtmlHelper.SetActiveMenuItemSystemName(System.String)">
            <summary>
            Specify system name of menu item that should be selected
            </summary>
            <param name="systemName"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.UI.NeptuneHtmlHelper.GetActiveMenuItemSystemName">
            <summary>
            Get system name of menu item that should be selected
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1">
            <summary>
            Base class for validators
            </summary>
            <typeparam name="TModel">Type for model being validated</typeparam>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1.PostInitialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1.SetDatabaseValidationRules``1(Jits.Neptune.Data.Mapping.IMappingEntityAccessor,System.String[])">
            <summary>
            Sets validation rules to appropriate database model
            </summary>
            <param name="mappingEntityAccessor">An object implements accessor methods to mapped entities</param>
            <param name="filterStringPropertyNames">Properties to skip</param>
            <typeparam name="TEntity">Entity type</typeparam>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1.SetStringPropertiesMaxLength(Jits.Neptune.Data.Mapping.NeptuneEntityDescriptor,System.String[])">
            <summary>
            Sets length validation rules to string properties according to appropriate database model
            </summary>
            <param name="entityDescriptor">Entity descriptor</param>
            <param name="filterPropertyNames">Properties to skip</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.BaseNeptuneValidator`1.SetDecimalMaxValue(Jits.Neptune.Data.Mapping.NeptuneEntityDescriptor)">
            <summary>
            Sets max value validaton rules to decimal properties according to appropriate database model
            </summary>
            <param name="entityDescriptor">Entity descriptor</param>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.DecimalPropertyValidator`2">
            <summary>
            Decimal validator
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.DecimalPropertyValidator`2.#ctor(System.Decimal)">
            <summary>
            Ctor
            </summary>
            <param name="maxValue">Maximum value</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.DecimalPropertyValidator`2.GetDefaultMessageTemplate(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.DecimalPropertyValidator`2.IsValid(FluentValidation.ValidationContext{`0},`1)">
            <summary>
            Is valid?
            </summary>
            <param name="context">Validation context</param>
            <param name="value">Validation context</param>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.Localization.LocaleStringResourceValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.Localization.LocaleStringResourceValidator.#ctor(Jits.Neptune.Web.Framework.Services.Localization.ILocalizationService)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.NeptuneValidationDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Validators.NeptuneValidationDefaults.ValidationRuleSet">
            <summary>
            Validation rule set
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Validators.NeptuneValidationDefaults.NotNullValidationLocaleName">
            <summary>
            Not Null validation locale name
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.WithMesageAwait``2(FluentValidation.IRuleBuilderOptions{``0,``1},System.Threading.Tasks.Task{System.String})">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="errorMessage"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.WithMesageAwait``2(FluentValidation.IRuleBuilderOptions{``0,``1},System.Func{System.Threading.Tasks.Task{System.String}})">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="errorMessage"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.WithMessageAwait``2(FluentValidation.IRuleBuilderOptions{``0,``1},System.Threading.Tasks.Task{System.String},System.Object[])">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="errorMessage"></param>
            <param name="args"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.MustAwait``2(FluentValidation.IRuleBuilder{``0,``1},System.Func{``0,``1,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            
            </summary>
            <param name="ruleBuilder"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.WhenAwait``2(FluentValidation.IRuleBuilderOptions{``0,``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},FluentValidation.ApplyConditionTo)">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="predicate"></param>
            <param name="applyConditionTo"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.MustRequire``2(FluentValidation.IRuleBuilder{``0,``1},System.String)">
            <summary>
            
            </summary>
            <param name="ruleBuilder"></param>
            <param name="fieldName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.RulleBuilderOptionsExtension.MustRequire``2(FluentValidation.IRuleBuilder{``0,``1})">
            <summary>
            
            </summary>
            <param name="ruleBuilder"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.ValidateAttribute">
            <summary>
            Represents attribute that used to mark model for the forced validation.
            Without this attribute, the model passed in the parameter will not be validated. It's used to prevent auto-validation of child models.
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.ValidateAttribute.#ctor">
            <summary>
            Validate attribute
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Validators.ValidatorExtesions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Validators.ValidatorExtesions.IsDecimal``1(FluentValidation.IRuleBuilder{``0,System.Decimal},System.Decimal)">
            <summary>
            
            </summary>
            <param name="ruleBuilder"></param>
            <param name="maxValue"></param>
            <typeparam name="TModel"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.WebApiCommonDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.UserKey">
            <summary>
            Gets user key of http context
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.ClaimTypeName">
            <summary>
            Gets Claim type
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.SecurityHeaderName">
            <summary>
            Gets the name of the header to be used for security
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.TokenLifeTime">
            <summary>
            Token lifetime in days
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.JwtSignatureAlgorithm">
            <summary>
            The JWT token signature algorithm
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiCommonDefaults.MinSecretKeyLength">
            <summary>
            The minimal length of secret key applied to signature algorithm
            <remarks>
            For HmacSha256 it may be at least 16 (128 bites)
            </remarks>
            </summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.WebApiSettings">
            <summary>
            Settings for Web Api
            </summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiSettings.DeveloperMode">
            <summary>
            Developer mode
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiSettings.SecretKey">
            <summary>
            Secret key
            </summary>
            <value></value>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.WebApiSettings.TokenLifetimeDays">
            <summary>
            Token life time in days
            </summary>
            <value></value>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.WebWorkContext">
            <summary>
            Represents work context for web application
            </summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Jits.Neptune.Web.Framework.Services.Localization.ILanguageService)">
            <summary>
            
            </summary>
            <param name="httpContextAccessor"></param>
            <param name="languageService"></param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetLanguageFromUrl">
            <summary>
            Get language from the requested page URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetLanguageFromRequest">
            <summary>
            Gets language from the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetCurrentRefId(System.String)">
            <summary>
            Set the current transaction reference identifier
            </summary>
            <param name="refId"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetCurrentRefId">
            <summary>
            Get the current transaction reference identifiers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetStatusReverse(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isReverse"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetWorkingDate(System.DateTime)">
            <summary>
            Set working date follow the workflow
            </summary>
            <param name="workingDate"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetWorkingDate(System.Boolean,System.Boolean)">
            <summary>
            Get the working date
            </summary>
            <param name="reload"></param>
            <param name="inBatch">default false: normal for wf, 
            true: for batch step call to return true working date</param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetCurrentUser">
            <summary>
            Gets the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetCurrentUser(Jits.Neptune.Core.Domain.Users.User)">
            <summary>
            Sets the current user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetWorkingLanguage(Jits.Neptune.Core.Domain.Localization.Language)">
            <summary>
            Sets current user working language
            </summary>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.SetWorkingLanguage(System.String)">
            <summary>
            Sets current user working language
            </summary>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.WebWorkContext.GetWorkingLanguage">
            <summary>
            Gets current user working language
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcServiceReflection">
            <summary>Holder for reflection information generated from Protos/NeptuneGrpcService.proto</summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcServiceReflection.Descriptor">
            <summary>File descriptor for Protos/NeptuneGrpcService.proto</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodSpec.FullClassNameFieldNumber">
            <summary>Field number for the "FullClassName" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodSpec.MethodNameFieldNumber">
            <summary>Field number for the "MethodName" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodSpec.ParametersFieldNumber">
            <summary>Field number for the "parameters" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodResult.ReturnValueFieldNumber">
            <summary>Field number for the "ReturnValue" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodResult.ExecutionTimeMillisFieldNumber">
            <summary>Field number for the "ExecutionTimeMillis" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodResult.HasExceptionFieldNumber">
            <summary>Field number for the "HasException" field.</summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.MethodResult.ExceptionMessageFieldNumber">
            <summary>Field number for the "ExceptionMessage" field.</summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Protos.CommandRequest">
             <summary>
            The request message containing the command's name
             </summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.CommandRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Protos.CommandResponse">
             <summary>
            The response message containing the message
             </summary>
        </member>
        <member name="F:Jits.Neptune.Web.Framework.Protos.CommandResponse.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase">
            <summary>Base class for server-side implementations of NeptuneGrpcService</summary>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase.CommandServerStreaming(Jits.Neptune.Web.Framework.Protos.CommandRequest,Grpc.Core.IServerStreamWriter{Jits.Neptune.Web.Framework.Protos.CommandResponse},Grpc.Core.ServerCallContext)">
             <summary>
            Server streaming method
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="responseStream">Used for sending responses back to the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase.CommanClientStreaming(Grpc.Core.IAsyncStreamReader{Jits.Neptune.Web.Framework.Protos.CommandRequest},Grpc.Core.ServerCallContext)">
             <summary>
            Client streaming method
             </summary>
             <param name="requestStream">Used for reading requests from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase.CommandBiDirectionalStreaming(Grpc.Core.IAsyncStreamReader{Jits.Neptune.Web.Framework.Protos.CommandRequest},Grpc.Core.IServerStreamWriter{Jits.Neptune.Web.Framework.Protos.CommandResponse},Grpc.Core.ServerCallContext)">
             <summary>
            Bi-directional streaming method
             </summary>
             <param name="requestStream">Used for reading requests from the client.</param>
             <param name="responseStream">Used for sending responses back to the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.BindService(Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.BindService(Grpc.Core.ServiceBinderBase,Jits.Neptune.Web.Framework.Protos.NeptuneGrpcService.NeptuneGrpcServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Nop.Web.Framework.Infrastructure.NeptuneEndpoints">
            <summary>
            Represents object for the configuring endpoints on application startup
            </summary>
        </member>
        <member name="M:Nop.Web.Framework.Infrastructure.NeptuneEndpoints.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services">Collection of service descriptors</param>
            <param name="configuration">Configuration of the application</param>
        </member>
        <member name="M:Nop.Web.Framework.Infrastructure.NeptuneEndpoints.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="P:Nop.Web.Framework.Infrastructure.NeptuneEndpoints.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
    </members>
</doc>
