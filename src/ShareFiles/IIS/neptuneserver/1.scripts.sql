CREATE TABLE IF NOT EXISTS `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;

START TRANSACTION;

ALTER DATABASE CHARACTER SET utf8;

CREATE TABLE `AUTH_ORGANIZATION` (
    `OrganizationID` varchar(100) NOT NULL,
    `OrganizationCode` varchar(100) NOT NULL,
    `OrganizationName` varchar(500) NOT NULL,
    `Phone` varchar(50) NULL,
    `Status` varchar(10) NOT NULL,
    `Email` varchar(1000) NULL,
    `Website` varchar(1000) NULL,
    `welcome_logo` text NULL,
    `login_background` text NULL,
    CONSTRAINT `PK_AUTH_ORGANIZATION` PRIMARY KEY (`OrganizationID`)
);

CREATE TABLE `AUTH_ROLE` (
    `RoleID` varchar(100) NOT NULL,
    `RoleCode` varchar(100) NOT NULL,
    `RoleName` varchar(500) NOT NULL,
    CONSTRAINT `PK_AUTH_ROLE` PRIMARY KEY (`RoleID`)
);

CREATE TABLE `AUTH_ROLE_USER` (
    `RoleID` varchar(100) NOT NULL,
    `UserID` varchar(100) NOT NULL,
    CONSTRAINT `PK_AUTH_ROLE_USER` PRIMARY KEY (`RoleID`, `UserID`)
);

CREATE TABLE `AUTH_ROLE_WF` (
    `RoleID` varchar(100) NOT NULL,
    `WorflowID` varchar(100) NOT NULL,
    CONSTRAINT `PK_AUTH_ROLE_WF` PRIMARY KEY (`RoleID`, `WorflowID`)
);

CREATE TABLE `AUTH_USER` (
    `UserID` varchar(100) NOT NULL,
    `UserCode` varchar(100) NOT NULL,
    `OrganizationID` varchar(100) NOT NULL,
    `UserName` varchar(500) NULL,
    `FullName` varchar(500) NULL,
    `Status` varchar(10) NOT NULL,
    `LanguageCode` longtext NOT NULL,
    `SessionExpirationInMinutes` int NOT NULL,
    `HashPassword` varchar(500) NULL,
    `TimeZone` decimal(65,30) NULL,
    CONSTRAINT `PK_AUTH_USER` PRIMARY KEY (`UserID`)
);

CREATE TABLE `CONFIGURATION` (
    `PARA_CODE` varchar(500) NOT NULL,
    `PARA_VALUE` varchar(4000) NULL,
    CONSTRAINT `PK_CONFIGURATION` PRIMARY KEY (`PARA_CODE`)
);

CREATE TABLE `ENVIRONMENT_VARIABLE` (
    `VARIABLE_NAME` varchar(500) NOT NULL,
    `E1` text NULL,
    `E2` text NULL,
    `E3` text NULL,
    `E4` text NULL,
    `E5` text NULL,
    `E6` text NULL,
    `E7` text NULL,
    `E8` text NULL,
    `E9` text NULL,
    CONSTRAINT `PK_ENVIRONMENT_VARIABLE` PRIMARY KEY (`VARIABLE_NAME`)
);

CREATE TABLE `EVENT_DEF` (
    `EVENT_NAME` varchar(500) NOT NULL,
    `STATUS` varchar(50) NOT NULL,
    `TYPE` varchar(50) NOT NULL,
    `DESCRIPTION` varchar(500) NULL,
    CONSTRAINT `PK_EVENT_DEF` PRIMARY KEY (`EVENT_NAME`)
);

CREATE TABLE `INSTANCE` (
    `INSTANCE_ID` varchar(255) NOT NULL,
    `GRPC_URL` longtext NOT NULL,
    `UTC_TIME` bigint NOT NULL,
    `UTC_EXP_TIME` bigint NOT NULL,
    CONSTRAINT `PK_INSTANCE` PRIMARY KEY (`INSTANCE_ID`)
);

CREATE TABLE `JWT` (
    `ID` varchar(1000) NOT NULL,
    `token` varchar(1000) NOT NULL,
    `valid_from` bigint NOT NULL,
    `valid_to` bigint NOT NULL,
    `user_id` varchar(1000) NOT NULL,
    `user_code` varchar(1000) NOT NULL,
    `user_name` varchar(1000) NOT NULL,
    `organization_id` varchar(1000) NOT NULL,
    `organization_code` varchar(1000) NOT NULL,
    `organization_name` varchar(1000) NOT NULL,
    CONSTRAINT `PK_JWT` PRIMARY KEY (`ID`)
);

CREATE TABLE `JWT_STATIC` (
    `ID` varchar(1000) NOT NULL,
    `token` varchar(1000) NOT NULL,
    `valid_from` bigint NOT NULL,
    `valid_to` bigint NOT NULL,
    `user_id` varchar(1000) NOT NULL,
    `user_code` varchar(1000) NOT NULL,
    `user_name` varchar(1000) NOT NULL,
    `organization_id` varchar(1000) NOT NULL,
    `organization_code` varchar(1000) NOT NULL,
    `organization_name` varchar(1000) NOT NULL,
    CONSTRAINT `PK_JWT_STATIC` PRIMARY KEY (`ID`)
);

CREATE TABLE `LANGUAGE_RESOURCE` (
    `RESOURCE_CODE` varchar(500) NOT NULL,
    `ID` varchar(100) NOT NULL,
    `EN` text NOT NULL,
    `VI` text NULL,
    `LA` text NULL,
    `KR` text NULL,
    `MM` text NULL,
    `TH` text NULL,
    CONSTRAINT `PK_LANGUAGE_RESOURCE` PRIMARY KEY (`RESOURCE_CODE`)
);

CREATE TABLE `LOG_API` (
    `AUDIT_ID` varchar(100) NOT NULL,
    `UTC_TIME` bigint NOT NULL,
    `REQUEST_SCHEME` varchar(100) NULL,
    `REQUEST_SERVER_IP` varchar(100) NULL,
    `REQUEST_PATH` varchar(4000) NULL,
    `REQUEST_HOST` varchar(4000) NULL,
    `REQUEST_BODY` text NULL,
    `LOGIN_USER_ID` varchar(100) NULL,
    `LOGIN_ORGANIZATION_ID` varchar(100) NULL,
    `RESPONSE_EXECUTION_ID` varchar(100) NULL,
    `RESPONSE_DESCRIPTION` varchar(4000) NULL,
    `RESPONSE_STATUS` varchar(100) NULL,
    `RESPONSE_DATA` text NULL,
    `TRACK_CHANGE` text NULL,
    CONSTRAINT `PK_LOG_API` PRIMARY KEY (`AUDIT_ID`)
);

CREATE TABLE `LOG_EVENT` (
    `EVENT_ID` varchar(255) NOT NULL,
    `INSTANCE_ID` varchar(500) NOT NULL,
    `RUNNING_ID` varchar(500) NOT NULL,
    `EVENT_TYPE` longtext NOT NULL,
    `UTC_TIME` bigint NOT NULL,
    `DESCS` text NOT NULL,
    `EVENT_DATA` text NULL,
    CONSTRAINT `PK_LOG_EVENT` PRIMARY KEY (`EVENT_ID`)
);

CREATE TABLE `LOG_GRPC` (
    `ID` varchar(50) NOT NULL,
    `INSTANCE_ID` varchar(500) NOT NULL,
    `RUNNING_ID` varchar(500) NOT NULL,
    `SERVER_TIME` bigint NOT NULL,
    `FROM_SERVICE_ID` varchar(100) NULL,
    `TO_SERVICE_ID` varchar(100) NULL,
    `METHOD_SPEC` varchar(4000) NULL,
    `METHOD_RESULT` text NULL,
    CONSTRAINT `PK_LOG_GRPC` PRIMARY KEY (`ID`)
);

CREATE TABLE `LOG_HTTP_REQUEST` (
    `REQUEST_ID` varchar(100) NOT NULL,
    `TIME_IN` bigint NOT NULL,
    `TIME_OUT` bigint NOT NULL,
    `DATA` text NULL,
    CONSTRAINT `PK_LOG_HTTP_REQUEST` PRIMARY KEY (`REQUEST_ID`)
);

CREATE TABLE `LOG_INCOMING_QUEUE_MESSAGE` (
    `MESSAGE_ID` varchar(100) NOT NULL,
    `COMING_TIME` bigint NOT NULL,
    `COMING_STATUS` varchar(50) NOT NULL,
    `COMING_CONTENT` text NULL,
    `PROCESSING_ERROR` text NULL,
    `REQUEST_EXEC_STEP_ID` varchar(100) NULL,
    `RESPONSE_STATUS` varchar(100) NULL,
    `RESPONSE_OUTPUT` text NULL,
    CONSTRAINT `PK_LOG_INCOMING_QUEUE_MESSAGE` PRIMARY KEY (`MESSAGE_ID`)
);

CREATE TABLE `LOG_RECEIVING_HTTP` (
    `HTTP_ID` varchar(100) NOT NULL,
    `TIME_START` bigint NOT NULL,
    `TIME_FINISH` bigint NOT NULL,
    `RECEIVING_DATA` text NULL,
    `SENDING_DATA` text NULL,
    `ERROR_DATA` text NULL,
    CONSTRAINT `PK_LOG_RECEIVING_HTTP` PRIMARY KEY (`HTTP_ID`)
);

CREATE TABLE `SENDING_HTTP` (
    `HTTP_ID` varchar(100) NOT NULL,
    `TIME_START` bigint NOT NULL,
    `TIME_FINISH` bigint NOT NULL,
    `SENDING_DATA` text NULL,
    `RECEIVING_DATA` text NULL,
    `ERROR_DATA` text NULL,
    CONSTRAINT `PK_SENDING_HTTP` PRIMARY KEY (`HTTP_ID`)
);

CREATE TABLE `SERVICE_DEF` (
    `SERVICE_ID` varchar(100) NOT NULL,
    `SERVICE_CODE` varchar(100) NOT NULL,
    `SERVICE_NAME` varchar(4000) NOT NULL,
    `STATUS` varchar(50) NOT NULL,
    `QUEUE_NAME` varchar(100) NOT NULL,
    `ACCEPT_TIME` bigint NOT NULL,
    `GRPC_STATUS` varchar(50) NOT NULL,
    `GRPC_TIMEOUT` bigint NOT NULL,
    `GRPC_URL` varchar(500) NULL,
    `EVENT_REGISTRATION` varchar(50) NOT NULL,
    `IMPORT_EXPORT_STEP_CODE` varchar(50) NOT NULL,
    `CONCURRENT_THREADS` bigint NOT NULL,
    CONSTRAINT `PK_SERVICE_DEF` PRIMARY KEY (`SERVICE_ID`)
);

CREATE TABLE `WF_DEF` (
    `WFID` varchar(100) NOT NULL,
    `Code` varchar(100) NULL,
    `Name` varchar(500) NULL,
    `Status` varchar(100) NOT NULL,
    `AllowReversal` varchar(100) NOT NULL,
    `Description` varchar(500) NULL,
    `TimeoutInMiliseconds` bigint NOT NULL,
    `KeepExecSeconds` bigint NOT NULL,
    `EventWorkflowRegistered` varchar(50) NOT NULL,
    `EventWorkflowCompleted` varchar(50) NOT NULL,
    `EventWorkflowError` varchar(50) NOT NULL,
    `EventWorkflowTimeout` varchar(50) NOT NULL,
    `EventWorkflowCompensated` varchar(50) NOT NULL,
    `EventWorkflowReversed` varchar(50) NOT NULL,
    `EventWorkflowStepStart` varchar(50) NOT NULL,
    `EventWorkflowStepCompleted` varchar(50) NOT NULL,
    `EventWorkflowStepError` varchar(50) NOT NULL,
    `EventWorkflowStepTimeout` varchar(50) NOT NULL,
    `EventWorkflowStepCompensated` varchar(50) NOT NULL,
    CONSTRAINT `PK_WF_DEF` PRIMARY KEY (`WFID`)
);

CREATE TABLE `WF_EXEC` (
    `EXECUTION_ID` varchar(100) NOT NULL,
    `USER_ID` varchar(100) NOT NULL,
    `ORGANIZATION_ID` varchar(100) NOT NULL,
    `INPUT` text NOT NULL,
    `WFID` varchar(100) NOT NULL,
    `LANG` varchar(2) NOT NULL,
    `CREATED_ON` bigint NOT NULL,
    `STATUS` varchar(100) NOT NULL,
    `FINISH_ON` bigint NOT NULL,
    `IS_SUCCESS` varchar(100) NOT NULL,
    `IS_TIMEOUT` varchar(100) NOT NULL,
    `IS_PROCESSING` varchar(100) NOT NULL,
    `STOP_ERROR` text NULL,
    `WORKFLOW_TYPE` varchar(100) NOT NULL,
    `REVERSED_EXECUTION_ID` varchar(100) NOT NULL,
    `REVERSED_BY_EXECUTION_ID` varchar(100) NOT NULL,
    `IS_DISPUTED` varchar(255) NOT NULL,
    `ARCHIVING_TIME` bigint NOT NULL,
    `PURGING_TIME` bigint NOT NULL,
    `TX_CONTEXT` text NOT NULL,
    `APPROVED_EXECUTION_ID` varchar(100) NULL,
    CONSTRAINT `PK_WF_EXEC` PRIMARY KEY (`EXECUTION_ID`)
);

CREATE TABLE `WF_EXEC_DONE` (
    `EXECUTION_ID` varchar(100) NOT NULL,
    `USER_ID` varchar(100) NOT NULL,
    `ORGANIZATION_ID` varchar(100) NOT NULL,
    `INPUT` text NOT NULL,
    `WFID` varchar(100) NOT NULL,
    `LANG` varchar(2) NOT NULL,
    `CREATED_ON` bigint NOT NULL,
    `STATUS` varchar(100) NOT NULL,
    `FINISH_ON` bigint NOT NULL,
    `IS_SUCCESS` varchar(100) NOT NULL,
    `IS_TIMEOUT` varchar(100) NOT NULL,
    `IS_PROCESSING` varchar(100) NOT NULL,
    `STOP_ERROR` text NULL,
    `WORKFLOW_TYPE` varchar(100) NOT NULL,
    `REVERSED_EXECUTION_ID` varchar(100) NOT NULL,
    `REVERSED_BY_EXECUTION_ID` varchar(100) NOT NULL,
    `IS_DISPUTED` varchar(255) NOT NULL,
    `ARCHIVING_TIME` bigint NOT NULL,
    `PURGING_TIME` bigint NOT NULL,
    `TX_CONTEXT` text NOT NULL,
    `APPROVED_EXECUTION_ID` varchar(100) NULL,
    CONSTRAINT `PK_WF_EXEC_DONE` PRIMARY KEY (`EXECUTION_ID`)
);

CREATE TABLE `WF_FIELD` (
    `WORKFLOW_ID` varchar(100) NOT NULL,
    `FIELD_CODE` varchar(100) NOT NULL,
    `FIELD_KEY` varchar(100) NOT NULL,
    `DATA_TYPE` varchar(100) NOT NULL,
    `IS_NULL` varchar(100) NOT NULL,
    `IS_REQUIRED` varchar(100) NOT NULL,
    `NUM_MIN` decimal(65,30) NOT NULL,
    `NUM_MAX` decimal(65,30) NOT NULL,
    `NUM_RANGE` text NULL,
    `TEXT_MIN` text NULL,
    `TEXT_MAX` text NULL,
    `TEXT_RANGE` text NULL,
    `TEXT_MAXLENGTH` int NOT NULL,
    `DATE_MIN` decimal(65,30) NOT NULL,
    `DATE_MAX` decimal(65,30) NOT NULL,
    `DATE_RANGE` text NULL,
    `BASE64_ICON` text NULL,
    CONSTRAINT `PK_WF_FIELD` PRIMARY KEY (`WORKFLOW_ID`, `FIELD_CODE`)
);

CREATE TABLE `WF_GROUP_EXEC` (
    `EXECUTION_ID` varchar(100) NOT NULL,
    `STEP_GROUP` int NOT NULL,
    `P1_STATUS` varchar(100) NOT NULL,
    `P2_STATUS` varchar(100) NOT NULL,
    `P1_START` bigint NOT NULL,
    `P1_FINISH` bigint NOT NULL,
    `P1_ERROR` text NULL,
    CONSTRAINT `PK_WF_GROUP_EXEC` PRIMARY KEY (`EXECUTION_ID`, `STEP_GROUP`)
);

CREATE TABLE `WF_GROUP_EXEC_DONE` (
    `EXECUTION_ID` varchar(100) NOT NULL,
    `STEP_GROUP` int NOT NULL,
    `P1_STATUS` varchar(100) NOT NULL,
    `P2_STATUS` varchar(100) NOT NULL,
    `P1_START` bigint NOT NULL,
    `P1_FINISH` bigint NOT NULL,
    `P1_ERROR` text NULL,
    CONSTRAINT `PK_WF_GROUP_EXEC_DONE` PRIMARY KEY (`EXECUTION_ID`, `STEP_GROUP`)
);


CREATE TABLE `WF_STEP_DEF` (
    `WFID` varchar(100) NOT NULL,
    `STEP_ORDER` int NOT NULL,
    `STEP_GROUP` int NOT NULL,
    `STEP_CODE` varchar(100) NULL,
    `STATUS` varchar(100) NOT NULL,
    `DESCRIPTION` varchar(4000) NULL,
    `SERVICE_ID` varchar(100) NULL,
    `SENDING_TEMPLATE` text NULL,
    `SUCCESS_CONDITION` text NULL,
    `REQUEST_PROTOCOL` varchar(1000) NULL,
    `REQUEST_SERVER_IP` varchar(100) NULL,
    `REQUEST_SERVER_PORT` varchar(100) NULL,
    `REQUEST_URI` varchar(100) NULL,
    `SEND_BY_BROKER` varchar(100) NOT NULL,
    `STEP_TIMEOUT` varchar(100) NULL,
    `STEP_MODE` varchar(20) NOT NULL,
    `BASE64_ICON` text NULL,
    `SENDING_CONDITION` text NULL,
    `ON_COMPENSATING` varchar(100) NOT NULL,
    CONSTRAINT `PK_WF_STEP_DEF` PRIMARY KEY (`WFID`, `STEP_ORDER`)
);

CREATE TABLE `WF_STEP_EXEC` (
    `STEP_EXECUTION_ID` varchar(100) NOT NULL,
    `EXECUTION_ID` varchar(100) NOT NULL,
    `WORKFLOW_ID` varchar(100) NULL,
    `STEP_GROUP` int NOT NULL,
    `STEP_ORDER` int NOT NULL,
    `STEP_CODE` varchar(100) NULL,
    `P1_REQUEST_ID` varchar(100) NULL,
    `P1_START` bigint NOT NULL,
    `P1_FINISH` bigint NOT NULL,
    `P1_STATUS` varchar(100) NOT NULL,
    `P1_ERROR` text NOT NULL,
    `P1_CONTENT` text NOT NULL,
    `P2_REQUEST_ID` varchar(100) NULL,
    `P2_START` bigint NOT NULL,
    `P2_FINISH` bigint NOT NULL,
    `P2_STATUS` varchar(100) NOT NULL,
    `P2_RESPONSE_STATUS` varchar(100) NULL,
    `P2_ERROR` text NULL,
    `P2_CONTENT` text NULL,
    `IS_SUCCESS` varchar(100) NOT NULL,
    `IS_TIMEOUT` varchar(100) NOT NULL,
    `P3_START` bigint NOT NULL,
    `P3_FINISH` bigint NOT NULL,
    `P3_STATUS` varchar(100) NOT NULL,
    `P3_CONTENT` text NULL,
    `P3_ERROR` text NULL,
    `SENDING_CONDITION` text NULL,
    `P4_STATUS` longtext NOT NULL,
    `IS_DISPUTED` varchar(255) NOT NULL,
    `P4_CONTENT` text NULL,
    CONSTRAINT `PK_WF_STEP_EXEC` PRIMARY KEY (`STEP_EXECUTION_ID`)
);

CREATE TABLE `WF_STEP_EXEC_DONE` (
    `STEP_EXECUTION_ID` varchar(100) NOT NULL,
    `EXECUTION_ID` varchar(100) NOT NULL,
    `WORKFLOW_ID` varchar(100) NULL,
    `STEP_GROUP` int NOT NULL,
    `STEP_ORDER` int NOT NULL,
    `STEP_CODE` varchar(100) NULL,
    `P1_REQUEST_ID` varchar(100) NULL,
    `P1_START` bigint NOT NULL,
    `P1_FINISH` bigint NOT NULL,
    `P1_STATUS` varchar(100) NOT NULL,
    `P1_ERROR` text NOT NULL,
    `P1_CONTENT` text NOT NULL,
    `P2_REQUEST_ID` varchar(100) NULL,
    `P2_START` bigint NOT NULL,
    `P2_FINISH` bigint NOT NULL,
    `P2_STATUS` varchar(100) NOT NULL,
    `P2_RESPONSE_STATUS` varchar(100) NULL,
    `P2_ERROR` text NULL,
    `P2_CONTENT` text NULL,
    `IS_SUCCESS` varchar(100) NOT NULL,
    `IS_TIMEOUT` varchar(100) NOT NULL,
    `P3_START` bigint NOT NULL,
    `P3_FINISH` bigint NOT NULL,
    `P3_STATUS` varchar(100) NOT NULL,
    `P3_CONTENT` text NULL,
    `P3_ERROR` text NULL,
    `SENDING_CONDITION` text NULL,
    `P4_STATUS` longtext NOT NULL,
    `IS_DISPUTED` varchar(255) NOT NULL,
    `P4_CONTENT` text NULL,
    CONSTRAINT `PK_WF_STEP_EXEC_DONE` PRIMARY KEY (`STEP_EXECUTION_ID`)
);

CREATE UNIQUE INDEX `IX_AUTH_ORGANIZATION_OrganizationCode` ON `AUTH_ORGANIZATION` (`OrganizationCode`);

CREATE UNIQUE INDEX `IX_AUTH_ROLE_RoleCode` ON `AUTH_ROLE` (`RoleCode`);

CREATE UNIQUE INDEX `IX_AUTH_USER_UserCode` ON `AUTH_USER` (`UserCode`);

CREATE INDEX `IX_JWT_token` ON `JWT` (`token`);

CREATE UNIQUE INDEX `IX_LANGUAGE_RESOURCE_RESOURCE_CODE` ON `LANGUAGE_RESOURCE` (`RESOURCE_CODE`);

CREATE INDEX `IX_LOG_API_LOGIN_ORGANIZATION_ID` ON `LOG_API` (`LOGIN_ORGANIZATION_ID`);

CREATE INDEX `IX_LOG_API_LOGIN_USER_ID` ON `LOG_API` (`LOGIN_USER_ID`);

CREATE INDEX `IX_LOG_API_RESPONSE_STATUS` ON `LOG_API` (`RESPONSE_STATUS`);

CREATE INDEX `IX_LOG_API_UTC_TIME` ON `LOG_API` (`UTC_TIME`);

CREATE INDEX `IX_LOG_EVENT_UTC_TIME` ON `LOG_EVENT` (`UTC_TIME`);

CREATE INDEX `IX_LOG_GRPC_INSTANCE_ID` ON `LOG_GRPC` (`INSTANCE_ID`);

CREATE INDEX `IX_LOG_GRPC_RUNNING_ID` ON `LOG_GRPC` (`RUNNING_ID`);

CREATE INDEX `IX_LOG_GRPC_SERVER_TIME` ON `LOG_GRPC` (`SERVER_TIME`);

CREATE UNIQUE INDEX `IX_SERVICE_DEF_SERVICE_CODE` ON `SERVICE_DEF` (`SERVICE_CODE`);

CREATE UNIQUE INDEX `IX_WF_DEF_Code` ON `WF_DEF` (`Code`);

CREATE INDEX `IX_WF_EXEC_ARCHIVING_TIME` ON `WF_EXEC` (`ARCHIVING_TIME`);

CREATE INDEX `IX_WF_EXEC_CREATED_ON` ON `WF_EXEC` (`CREATED_ON`);

CREATE INDEX `IX_WF_EXEC_FINISH_ON` ON `WF_EXEC` (`FINISH_ON`);

CREATE INDEX `IX_WF_EXEC_IS_DISPUTED` ON `WF_EXEC` (`IS_DISPUTED`);

CREATE INDEX `IX_WF_EXEC_IS_SUCCESS` ON `WF_EXEC` (`IS_SUCCESS`);

CREATE INDEX `IX_WF_EXEC_IS_TIMEOUT` ON `WF_EXEC` (`IS_TIMEOUT`);

CREATE INDEX `IX_WF_EXEC_ORGANIZATION_ID` ON `WF_EXEC` (`ORGANIZATION_ID`);

CREATE INDEX `IX_WF_EXEC_PURGING_TIME` ON `WF_EXEC` (`PURGING_TIME`);

CREATE INDEX `IX_WF_EXEC_STATUS` ON `WF_EXEC` (`STATUS`);

CREATE INDEX `IX_WF_EXEC_USER_ID` ON `WF_EXEC` (`USER_ID`);

CREATE INDEX `IX_WF_EXEC_WFID` ON `WF_EXEC` (`WFID`);

CREATE INDEX `IX_WF_EXEC_WORKFLOW_TYPE` ON `WF_EXEC` (`WORKFLOW_TYPE`);

CREATE INDEX `IX_WF_EXEC_DONE_ARCHIVING_TIME` ON `WF_EXEC_DONE` (`ARCHIVING_TIME`);

CREATE INDEX `IX_WF_EXEC_DONE_CREATED_ON` ON `WF_EXEC_DONE` (`CREATED_ON`);

CREATE INDEX `IX_WF_EXEC_DONE_FINISH_ON` ON `WF_EXEC_DONE` (`FINISH_ON`);

CREATE INDEX `IX_WF_EXEC_DONE_IS_DISPUTED` ON `WF_EXEC_DONE` (`IS_DISPUTED`);

CREATE INDEX `IX_WF_EXEC_DONE_IS_SUCCESS` ON `WF_EXEC_DONE` (`IS_SUCCESS`);

CREATE INDEX `IX_WF_EXEC_DONE_IS_TIMEOUT` ON `WF_EXEC_DONE` (`IS_TIMEOUT`);

CREATE INDEX `IX_WF_EXEC_DONE_ORGANIZATION_ID` ON `WF_EXEC_DONE` (`ORGANIZATION_ID`);

CREATE INDEX `IX_WF_EXEC_DONE_PURGING_TIME` ON `WF_EXEC_DONE` (`PURGING_TIME`);

CREATE INDEX `IX_WF_EXEC_DONE_STATUS` ON `WF_EXEC_DONE` (`STATUS`);

CREATE INDEX `IX_WF_EXEC_DONE_USER_ID` ON `WF_EXEC_DONE` (`USER_ID`);

CREATE INDEX `IX_WF_EXEC_DONE_WFID` ON `WF_EXEC_DONE` (`WFID`);

CREATE INDEX `IX_WF_EXEC_DONE_WORKFLOW_TYPE` ON `WF_EXEC_DONE` (`WORKFLOW_TYPE`);

CREATE INDEX `IX_WF_STEP_EXEC_EXECUTION_ID` ON `WF_STEP_EXEC` (`EXECUTION_ID`);

CREATE INDEX `IX_WF_STEP_EXEC_IS_DISPUTED` ON `WF_STEP_EXEC` (`IS_DISPUTED`);

CREATE INDEX `IX_WF_STEP_EXEC_IS_SUCCESS` ON `WF_STEP_EXEC` (`IS_SUCCESS`);

CREATE INDEX `IX_WF_STEP_EXEC_IS_TIMEOUT` ON `WF_STEP_EXEC` (`IS_TIMEOUT`);

CREATE INDEX `IX_WF_STEP_EXEC_P1_FINISH` ON `WF_STEP_EXEC` (`P1_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_P1_START` ON `WF_STEP_EXEC` (`P1_START`);

CREATE INDEX `IX_WF_STEP_EXEC_P1_STATUS` ON `WF_STEP_EXEC` (`P1_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_P2_FINISH` ON `WF_STEP_EXEC` (`P2_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_P2_START` ON `WF_STEP_EXEC` (`P2_START`);

CREATE INDEX `IX_WF_STEP_EXEC_P2_STATUS` ON `WF_STEP_EXEC` (`P2_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_P3_FINISH` ON `WF_STEP_EXEC` (`P3_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_P3_START` ON `WF_STEP_EXEC` (`P3_START`);

CREATE INDEX `IX_WF_STEP_EXEC_P3_STATUS` ON `WF_STEP_EXEC` (`P3_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_STEP_CODE` ON `WF_STEP_EXEC` (`STEP_CODE`);

CREATE INDEX `IX_WF_STEP_EXEC_WORKFLOW_ID` ON `WF_STEP_EXEC` (`WORKFLOW_ID`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_EXECUTION_ID` ON `WF_STEP_EXEC_DONE` (`EXECUTION_ID`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_IS_DISPUTED` ON `WF_STEP_EXEC_DONE` (`IS_DISPUTED`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_IS_SUCCESS` ON `WF_STEP_EXEC_DONE` (`IS_SUCCESS`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_IS_TIMEOUT` ON `WF_STEP_EXEC_DONE` (`IS_TIMEOUT`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P1_FINISH` ON `WF_STEP_EXEC_DONE` (`P1_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P1_START` ON `WF_STEP_EXEC_DONE` (`P1_START`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P1_STATUS` ON `WF_STEP_EXEC_DONE` (`P1_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P2_FINISH` ON `WF_STEP_EXEC_DONE` (`P2_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P2_START` ON `WF_STEP_EXEC_DONE` (`P2_START`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P2_STATUS` ON `WF_STEP_EXEC_DONE` (`P2_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P3_FINISH` ON `WF_STEP_EXEC_DONE` (`P3_FINISH`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P3_START` ON `WF_STEP_EXEC_DONE` (`P3_START`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_P3_STATUS` ON `WF_STEP_EXEC_DONE` (`P3_STATUS`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_STEP_CODE` ON `WF_STEP_EXEC_DONE` (`STEP_CODE`);

CREATE INDEX `IX_WF_STEP_EXEC_DONE_WORKFLOW_ID` ON `WF_STEP_EXEC_DONE` (`WORKFLOW_ID`);

INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20220913132529_v1', '6.0.7');

COMMIT;

