version: "3.4"

services:
  # neptunedb_sqlserver:
  #   image: mcr.microsoft.com/mssql/server
  #   container_name: neptunedb_sqlserver
  #   environment:
  #     - MSSQL_SA_PASSWORD=admin1234
  #     - ACCEPT_EULA=Y
  #   restart: always
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - /home/sqlserver-data/data:/var/opt/mssql/data:Z
  #     - /home/sqlserver-data/log:/var/opt/mssql/log:Z
  #     - /home/sqlserver-data/secrets:/var/opt/mssql/secrets:Z

  # adminer:
  #   image: adminer
  #   container_name: adminer
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=neptunedb_sqlserver
  #     - ADMINER_DESIGN=lucas-sandery
  #     - ADMINER_PLUGINS=tables-filter tinymce
  #   restart: always
  #   ports:
  #     - "8080:8080"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5673:5672"
      - "15672:15672"
    volumes:
      - /home/rabbitmq_data:/var/lib/rabbitmq/mnesia

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "8040:8000"
      - "9040:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  neptuneserver:
    image: ${DOCKER_REGISTRY-}neptuneserver
    build:
      context: .
      dockerfile: neptuneserver/Dockerfile_deploy
    container_name: neptuneserver
    environment:
      - NEPTUNE_DB_ONLINE_SERVER_NAME=localhost
      - NEPTUNE_DB_ONLINE_SERVER_PORT=1433
      - NEPTUNE_DB_ONLINE_NAME=neptune
      - NEPTUNE_DB_ONLINE_SCHEMA=neptune
      - NEPTUNE_DB_ONLINE_RDBMS_TYPE=sqlserver
      - NEPTUNE_DB_ONLINE_USERNAME=neptune
      - NEPTUNE_DB_ONLINE_PASSWORD=sf08a+k3gBbKQXWDKXxaag==
    depends_on:
      - rabbitmq
    restart: always
    ports:
      - "105:105"
      - "109:109"

  accounting.api:
    image: ${DOCKER_REGISTRY-}accountingapi
    build:
      context: .
      dockerfile: accounting/Dockerfile_SqlServer
    container_name: accounting.api
    depends_on:
      - neptuneserver
    ports:
      - "8050:80"
      - "5050:5000"

  admin.api:
    image: ${DOCKER_REGISTRY-}adminapi
    build:
      context: .
      dockerfile: admin/Dockerfile_SqlServer
    container_name: admin.api
    depends_on:
      - neptuneserver
    ports:
      - "8051:80"
      - "5051:5000"

  cash.api:
    image: ${DOCKER_REGISTRY-}cashapi
    build:
      context: .
      dockerfile: cash/Dockerfile_SqlServer
    container_name: cash.api
    depends_on:
      - neptuneserver
    ports:
      - "8052:80"
      - "5052:5000"

  credit.api:
    image: ${DOCKER_REGISTRY-}creditapi
    build:
      context: .
      dockerfile: credit/Dockerfile_SqlServer
    container_name: credit.api
    depends_on:
      - neptuneserver
    ports:
      - "8053:80"
      - "5053:5000"

  customer.api:
    image: ${DOCKER_REGISTRY-}customerapi
    build:
      context: .
      dockerfile: customer/Dockerfile_SqlServer
    container_name: customer.api
    depends_on:
      - neptuneserver
    ports:
      - "8054:80"
      - "5054:5000"

  deposit.api:
    image: ${DOCKER_REGISTRY-}depositgapi
    build:
      context: .
      dockerfile: deposit/Dockerfile_SqlServer
    container_name: deposit.api
    depends_on:
      - neptuneserver
    ports:
      - "8055:80"
      - "5055:5000"

  fixedasset.api:
    image: ${DOCKER_REGISTRY-}fixedassetapi
    build:
      context: .
      dockerfile: fixedasset/Dockerfile_SqlServer
    container_name: fixedasset.api
    depends_on:
      - neptuneserver
    ports:
      - "8056:80"
      - "5056:5000"

  fx.api:
    image: ${DOCKER_REGISTRY-}fxapi
    build:
      context: .
      dockerfile: fx/Dockerfile_SqlServer
    container_name: fx.api
    depends_on:
      - neptuneserver
    ports:
      - "8057:80"
      - "5057:5000"

  payment.api:
    image: ${DOCKER_REGISTRY-}paymentapi
    build:
      context: .
      dockerfile: payment/Dockerfile_SqlServer
    container_name: payment.api
    depends_on:
      - neptuneserver
    ports:
      - "8058:80"
      - "5058:5000"

  mortgage.api:
    image: ${DOCKER_REGISTRY-}mortgageapi
    build:
      context: .
      dockerfile: mortgage/Dockerfile_SqlServer
    container_name: mortgage.api
    depends_on:
      - neptuneserver
    ports:
      - "8059:80"
      - "5059:5000"

  batch.api:
    image: ${DOCKER_REGISTRY-}batchapi
    build:
      context: .
      dockerfile: batch/Dockerfile_SqlServer
    container_name: batch.api
    depends_on:
      - neptuneserver
    ports:
      - "8062:80"
      - "5062:5000"

  cms.api:
    image: ${DOCKER_REGISTRY-}cmsapi
    build:
      context: .
      dockerfile: cms/Dockerfile_SqlServer
    container_name: cms.api
    depends_on:
      - neptuneserver
      - redis
    ports:
      - "8066:443"
      - "6066:5000"

  nginx:
    image: ${DOCKER_REGISTRY-}nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 5066:443

  voucher.api:
    image: ${DOCKER_REGISTRY-}voucherapi
    build:
      context: .
      dockerfile: voucher/Dockerfile_SqlServer
    container_name: voucher.api
    depends_on:
      - neptuneserver
    ports:
      - "8063:443"
      - "5063:5000"

  ems.api:
    image: ${DOCKER_REGISTRY-}emsapi
    build:
      context: .
      dockerfile: ems/Dockerfile_SqlServer
    container_name: ems.api
    depends_on:
      - neptuneserver
    ports:
      - "8065:80"
      - "5065:5000"

  report.api:
    image: ${DOCKER_REGISTRY-}reportapi
    build:
      context: .
      dockerfile: report/Dockerfile_SqlServer
    container_name: report.api
    depends_on:
      - neptuneserver
    ports:
      - "8067:443"
      - "5067:5000"

  email.api:
    image: ${DOCKER_REGISTRY-}emailapi
    build:
      context: .
      dockerfile: email/Dockerfile_SqlServer
    container_name: email.api
    depends_on:
      - neptuneserver
    ports:
      - "8064:80"
      - "5064:5000"

  import.api:
    image: ${DOCKER_REGISTRY-}importapi
    build:
      context: .
      dockerfile: import/Dockerfile_SqlServer
    container_name: import.api
    depends_on:
      - neptuneserver
    ports:
      - "8071:80"
      - "5071:5000"

  party.api:
    image: ${DOCKER_REGISTRY-}partyapi
    build:
      context: .
      dockerfile: party/Dockerfile_SqlServer
    container_name: party.api
    depends_on:
      - neptuneserver
    ports:
      - "8069:80"
      - "5069:5000"

  card.api:
    image: ${DOCKER_REGISTRY-}cardapi
    build:
      context: .
      dockerfile: card/Dockerfile_SqlServer
    container_name: card.api
    depends_on:
      - neptuneserver
    ports:
      - "8070:80"
      - "5070:5000"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  portainer_data:
